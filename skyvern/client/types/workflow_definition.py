# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from .workflow_definition_blocks_item import WorkflowDefinitionBlocksItem
from .workflow_definition_parameters_item import WorkflowDefinitionParametersItem


class WorkflowDefinition(UniversalBaseModel):
    parameters: typing.List[WorkflowDefinitionParametersItem]
    blocks: typing.List[WorkflowDefinitionBlocksItem]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .context_parameter import ContextParameter  # noqa: E402, F401, I001
from .for_loop_block import ForLoopBlock  # noqa: E402, F401, I001

update_forward_refs(WorkflowDefinition)
