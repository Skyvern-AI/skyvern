{
  "openapi": "3.1.0",
  "info": {
    "title": "Skyvern API",
    "description": "API for Skyvern",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/run/tasks": {
      "post": {
        "tags": [
          "Agent"
        ],
        "summary": "Run a task",
        "description": "Run a task",
        "operationId": "run_task_v1_run_tasks_post",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          },
          {
            "name": "x-user-agent",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Agent"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskRunRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully run task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid agent engine"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "agent",
        "x-fern-sdk-method-name": "run_task",
        "x-fern-examples": [
          {
            "code-samples": [
              {
                "sdk": "python",
                "code": "from skyvern import Skyvern\n\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\nawait skyvern.agent.run_task(prompt=\"What's the top post on hackernews?\")\n"
              }
            ]
          }
        ]
      }
    },
    "/v1/run/workflows": {
      "post": {
        "tags": [
          "Agent"
        ],
        "summary": "Run a workflow",
        "description": "Run a workflow",
        "operationId": "run_workflow_v1_run_workflows_post",
        "parameters": [
          {
            "name": "template",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Template"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          },
          {
            "name": "x-max-steps-override",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Max-Steps-Override"
            }
          },
          {
            "name": "x-user-agent",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-User-Agent"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRunRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully run workflow",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRunResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid workflow run request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "agent",
        "x-fern-sdk-method-name": "run_workflow",
        "x-fern-examples": [
          {
            "code-samples": [
              {
                "sdk": "python",
                "code": "from skyvern import Skyvern\n\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\nawait skyvern.agent.run_workflow(workflow_id=\"wpid_123\", parameters={\"parameter1\": \"value1\", \"parameter2\": \"value2\"})\n"
              }
            ]
          }
        ]
      }
    },
    "/v1/runs/{run_id}": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Get a task or a workflow run by id",
        "description": "Get run information (task run, workflow run)",
        "operationId": "get_run_v1_runs__run_id__get",
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the task run or the workflow run.",
              "examples": [
                "tsk_123",
                "tsk_v2_123",
                "wr_123"
              ],
              "title": "Run Id"
            },
            "description": "The id of the task run or the workflow run."
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully got run",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TaskRunResponse"
                    },
                    {
                      "$ref": "#/components/schemas/WorkflowRunResponse"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "run_type",
                    "mapping": {
                      "task_v1": "#/components/schemas/TaskRunResponse",
                      "task_v2": "#/components/schemas/TaskRunResponse",
                      "openai_cua": "#/components/schemas/TaskRunResponse",
                      "anthropic_cua": "#/components/schemas/TaskRunResponse",
                      "workflow_run": "#/components/schemas/WorkflowRunResponse"
                    }
                  },
                  "title": "Response Get Run V1 Runs  Run Id  Get"
                }
              }
            }
          },
          "404": {
            "description": "Run not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "agent",
        "x-fern-sdk-method-name": "get_run",
        "x-fern-examples": [
          {
            "code-samples": [
              {
                "sdk": "python",
                "code": "from skyvern import Skyvern\n\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\nrun = await skyvern.agent.get_run(run_id=\"tsk_v2_123\")\nprint(run)\n"
              }
            ]
          }
        ]
      }
    },
    "/v1/runs/{run_id}/cancel": {
      "post": {
        "tags": [
          "Agent"
        ],
        "summary": "Cancel a task or workflow run",
        "description": "Cancel a run (task or workflow)",
        "operationId": "cancel_run_v1_runs__run_id__cancel_post",
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the task run or the workflow run to cancel.",
              "title": "Run Id"
            },
            "description": "The id of the task run or the workflow run to cancel."
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "agent",
        "x-fern-sdk-method-name": "cancel_run",
        "x-fern-examples": [
          {
            "code-samples": [
              {
                "sdk": "python",
                "code": "from skyvern import Skyvern\n\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\nawait skyvern.agent.cancel_run(run_id=\"tsk_v2_123\")\n"
              }
            ]
          }
        ]
      }
    },
    "/v1/workflows": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "summary": "Create a new workflow definition",
        "description": "Create a new workflow definition",
        "operationId": "create_workflow_v1_workflows_post",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created workflow",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "422": {
            "description": "Invalid workflow definition"
          }
        },
        "x-fern-sdk-group-name": "workflows",
        "x-fern-sdk-method-name": "create_workflow",
        "x-fern-examples": [
          {
            "code-samples": [
              {
                "sdk": "curl",
                "code": "curl -X POST https://api.skyvern.com/v1/workflows --header 'x-api-key: {{x-api-key}}' --header 'Content-Type: text/plain' --data-raw 'title: Contact Forms\ndescription: Fill the contact form on the website\nproxy_location: RESIDENTIAL\nwebhook_callback_url: https://example.com/webhook\ntotp_verification_url: https://example.com/totp\npersist_browser_session: false\nworkflow_definition:\n  parameters:\n    - key: website_url\n      description: null\n      parameter_type: workflow\n      workflow_parameter_type: string\n      default_value: null\n    - key: name\n      description: null\n      parameter_type: workflow\n      workflow_parameter_type: string\n      default_value: null\n    - key: additional_information\n      description: null\n      parameter_type: workflow\n      workflow_parameter_type: string\n      default_value: |-\n        Message: I'd love to learn more about your...\n        Phone: 123-456-7890\n        Inquiry type: sales\n        Optional Subject: Hello from [Company Here]\n    - key: email\n      description: null\n      parameter_type: workflow\n      workflow_parameter_type: string\n      default_value: null\n  blocks:\n    - label: Fill_Out_Contact_Form\n      continue_on_failure: true\n      block_type: navigation\n      url: \"{{website_url}}\"\n      title: Fill_Out_Contact_Form\n      engine: skyvern-1.0\n      navigation_goal: \u003E-\n        Find the contact form. Fill out the contact us form and submit it. Your\n        goal is complete when the page says your message has been sent. In the\n        case you can't find a contact us form, terminate.\n\n\n        Fill out required fields as best you can using the following\n        information:\n\n        {{name}}\n\n        {{email}}\n\n        {{additional_information}}\n      error_code_mapping: null\n      max_retries: 0\n      max_steps_per_run: null\n      complete_on_download: false\n      download_suffix: null\n      parameter_keys: []\n      totp_identifier: null\n      totp_verification_url: null\n      cache_actions: false\n      complete_criterion: \"\"\n      terminate_criterion: \"\"\n      include_action_history_in_verification: false\n    - label: Extract_Email\n      continue_on_failure: false\n      block_type: extraction\n      url: \"\"\n      title: Extract_Email\n      data_extraction_goal: \"Extract a company email if available \"\n      data_schema: null\n      max_retries: 0\n      max_steps_per_run: null\n      parameter_keys: []\n      cache_actions: false\n'\n"
              },
              {
                "sdk": "python",
                "code": "\nfrom skyvern import Skyvern\n\n# Create a workflow in JSON format\nworkflow_definition = {\n    \"title\": \"Contact Forms Workflow\",\n    \"description\": \"Fill the contact form on the website\",\n    \"proxy_location\": \"RESIDENTIAL\",\n    \"webhook_callback_url\": \"https://example.com/webhook\",\n    \"totp_verification_url\": \"https://example.com/totp\",\n    \"totp_identifier\": \"4155555555\",\n    \"workflow_definition\": {\n        \"parameters\": [\n            {\n                \"key\": \"website_url\",\n                \"description\": None,\n                \"parameter_type\": \"workflow\",\n                \"workflow_parameter_type\": \"string\",\n                \"default_value\": None,\n            },\n            {\n                \"key\": \"name\",\n                \"description\": None,\n                \"parameter_type\": \"workflow\",\n                \"workflow_parameter_type\": \"string\",\n                \"default_value\": None,\n            },\n            {\n                \"key\": \"additional_information\",\n                \"description\": None,\n                \"parameter_type\": \"workflow\",\n                \"workflow_parameter_type\": \"string\",\n                \"default_value\": \"Message: I'd love to learn more about your...\nPhone: 123-456-7890\nInquiry type: sales\nOptional Subject: Hello from [Company Here]\",\n            },\n            {\n                \"key\": \"email\",\n                \"description\": None,\n                \"parameter_type\": \"workflow\",\n                \"workflow_parameter_type\": \"string\",\n                \"default_value\": None,\n            },\n        ],\n        \"blocks\": [\n            {\n                \"label\": \"Fill_Out_Contact_Form\",\n                \"continue_on_failure\": True,\n                \"block_type\": \"navigation\",\n                \"url\": \"{{website_url}}\",\n                \"title\": \"Fill_Out_Contact_Form\",\n                \"engine\": \"skyvern-1.0\",\n                \"navigation_goal\": \"Find the contact form. Fill out the contact us form and submit it. Your goal is complete when the page says your message has been sent. In the case you can't find a contact us form, terminate.\n\nFill out required fields as best you can using the following information:\n{{name}}\n{{email}}\n{{additional_information}}\",\n                \"error_code_mapping\": None,\n                \"max_retries\": 0,\n                \"max_steps_per_run\": None,\n                \"complete_on_download\": False,\n                \"download_suffix\": None,\n                \"parameter_keys\": [],\n                \"totp_identifier\": None,\n                \"totp_verification_url\": None,\n                \"cache_actions\": False,\n                \"complete_criterion\": \"\",\n                \"terminate_criterion\": \"\",\n                \"include_action_history_in_verification\": False,\n            },\n            {\n                \"label\": \"Extract_Email\",\n                \"continue_on_failure\": False,\n                \"block_type\": \"extraction\",\n                \"url\": \"\",\n                \"title\": \"Extract_Email\",\n                \"data_extraction_goal\": \"Extract a company email if available \",\n                \"data_schema\": None,\n                \"max_retries\": 0,\n                \"max_steps_per_run\": None,\n                \"parameter_keys\": [],\n                \"cache_actions\": False,\n            },\n        ],\n    },\n}\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\nworkflow = await skyvern.workflows.create_workflow(json_definition=workflow_definition)\nprint(workflow)\n"
              }
            ]
          }
        ]
      }
    },
    "/v1/workflows/{workflow_id}": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "summary": "Update a workflow definition",
        "description": "Update a workflow definition",
        "operationId": "update_workflow_v1_workflows__workflow_id__post",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the workflow to update. Workflow ID starts with `wpid_`.",
              "examples": [
                "wpid_123"
              ],
              "title": "Workflow Id"
            },
            "description": "The ID of the workflow to update. Workflow ID starts with `wpid_`."
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated workflow",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "422": {
            "description": "Invalid workflow definition"
          }
        },
        "x-fern-sdk-group-name": "workflows",
        "x-fern-sdk-method-name": "update_workflow",
        "x-fern-examples": [
          {
            "code-samples": [
              {
                "sdk": "curl",
                "code": "curl -X POST https://api.skyvern.com/v1/workflows/wpid_123 --header 'x-api-key: {{x-api-key}}' --header 'Content-Type: text/plain' --data-raw 'title: Contact Forms\ndescription: Fill the contact form on the website\nproxy_location: RESIDENTIAL\nwebhook_callback_url: https://example.com/webhook\ntotp_verification_url: https://example.com/totp\npersist_browser_session: false\nworkflow_definition:\n  parameters:\n    - key: website_url\n      description: null\n      parameter_type: workflow\n      workflow_parameter_type: string\n      default_value: null\n    - key: name\n      description: null\n      parameter_type: workflow\n      workflow_parameter_type: string\n      default_value: null\n    - key: additional_information\n      description: null\n      parameter_type: workflow\n      workflow_parameter_type: string\n      default_value: |-\n        Message: I'd love to learn more about your...\n        Phone: 123-456-7890\n        Inquiry type: sales\n        Optional Subject: Hello from [Company Here]\n    - key: email\n      description: null\n      parameter_type: workflow\n      workflow_parameter_type: string\n      default_value: null\n  blocks:\n    - label: Fill_Out_Contact_Form\n      continue_on_failure: true\n      block_type: navigation\n      url: \"{{website_url}}\"\n      title: Fill_Out_Contact_Form\n      engine: skyvern-1.0\n      navigation_goal: \u003E-\n        Find the contact form. Fill out the contact us form and submit it. Your\n        goal is complete when the page says your message has been sent. In the\n        case you can't find a contact us form, terminate.\n\n\n        Fill out required fields as best you can using the following\n        information:\n\n        {{name}}\n\n        {{email}}\n\n        {{additional_information}}\n      error_code_mapping: null\n      max_retries: 0\n      max_steps_per_run: null\n      complete_on_download: false\n      download_suffix: null\n      parameter_keys: []\n      totp_identifier: null\n      totp_verification_url: null\n      cache_actions: false\n      complete_criterion: \"\"\n      terminate_criterion: \"\"\n      include_action_history_in_verification: false\n    - label: Extract_Email\n      continue_on_failure: false\n      block_type: extraction\n      url: \"\"\n      title: Extract_Email\n      data_extraction_goal: \"Extract a company email if available \"\n      data_schema: null\n      max_retries: 0\n      max_steps_per_run: null\n      parameter_keys: []\n      cache_actions: false\n'\n"
              },
              {
                "sdk": "python",
                "code": "\nfrom skyvern import Skyvern\n\nupdated_workflow_definition = {\n    \"title\": \"Updated Contact Forms Workflow\",\n    \"description\": \"Fill the contact form on the website\",\n    \"proxy_location\": \"RESIDENTIAL\",\n    \"webhook_callback_url\": \"https://example.com/webhook\",\n    \"totp_verification_url\": \"https://example.com/totp\",\n    \"totp_identifier\": \"4155555555\",\n    \"workflow_definition\": {\n        \"parameters\": [\n            {\n                \"key\": \"website_url\",\n                \"description\": None,\n                \"parameter_type\": \"workflow\",\n                \"workflow_parameter_type\": \"string\",\n                \"default_value\": None,\n            },\n            {\n                \"key\": \"name\",\n                \"description\": None,\n                \"parameter_type\": \"workflow\",\n                \"workflow_parameter_type\": \"string\",\n                \"default_value\": None,\n            },\n            {\n                \"key\": \"additional_information\",\n                \"description\": None,\n                \"parameter_type\": \"workflow\",\n                \"workflow_parameter_type\": \"string\",\n                \"default_value\": \"Message: I'd love to learn more about your...\nPhone: 123-456-7890\nInquiry type: sales\nOptional Subject: Hello from [Company Here]\",\n            },\n            {\n                \"key\": \"email\",\n                \"description\": None,\n                \"parameter_type\": \"workflow\",\n                \"workflow_parameter_type\": \"string\",\n                \"default_value\": None,\n            },\n        ],\n        \"blocks\": [\n            {\n                \"label\": \"Fill_Out_Contact_Form\",\n                \"continue_on_failure\": True,\n                \"block_type\": \"navigation\",\n                \"url\": \"{{website_url}}\",\n                \"title\": \"Fill_Out_Contact_Form\",\n                \"engine\": \"skyvern-1.0\",\n                \"navigation_goal\": \"Find the contact form. Fill out the contact us form and submit it. Your goal is complete when the page says your message has been sent. In the case you can't find a contact us form, terminate.\n\nFill out required fields as best you can using the following information:\n{{name}}\n{{email}}\n{{additional_information}}\",\n                \"error_code_mapping\": None,\n                \"max_retries\": 0,\n                \"max_steps_per_run\": None,\n                \"complete_on_download\": False,\n                \"download_suffix\": None,\n                \"parameter_keys\": [],\n                \"totp_identifier\": None,\n                \"totp_verification_url\": None,\n                \"cache_actions\": False,\n                \"complete_criterion\": \"\",\n                \"terminate_criterion\": \"\",\n                \"include_action_history_in_verification\": False,\n            },\n            {\n                \"label\": \"Extract_Email\",\n                \"continue_on_failure\": False,\n                \"block_type\": \"extraction\",\n                \"url\": \"\",\n                \"title\": \"Extract_Email\",\n                \"data_extraction_goal\": \"Extract a company email if available \",\n                \"data_schema\": None,\n                \"max_retries\": 0,\n                \"max_steps_per_run\": None,\n                \"parameter_keys\": [],\n                \"cache_actions\": False,\n            },\n        ],\n    },\n}\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\nworkflow = await skyvern.workflows.update_workflow(workflow_id=\"wpid_123\", json_definition=updated_workflow_definition)\nprint(workflow)\n"
              }
            ]
          }
        ]
      }
    },
    "/v1/workflows/{workflow_id}/delete": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "summary": "Delete a workflow",
        "description": "Delete a workflow",
        "operationId": "delete_workflow_v1_workflows__workflow_id__delete_post",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the workflow to delete. Workflow ID starts with `wpid_`.",
              "examples": [
                "wpid_123"
              ],
              "title": "Workflow Id"
            },
            "description": "The ID of the workflow to delete. Workflow ID starts with `wpid_`."
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted workflow",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "workflows",
        "x-fern-sdk-method-name": "delete_workflow",
        "x-fern-examples": [
          {
            "code-samples": [
              {
                "sdk": "python",
                "code": "from skyvern import Skyvern\n\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\nawait skyvern.workflows.delete_workflow(workflow_id=\"wpid_123\")\n"
              }
            ]
          }
        ]
      }
    },
    "/v1/browser_sessions": {
      "post": {
        "tags": [
          "Browser Sessions"
        ],
        "summary": "Create a new browser session",
        "description": "Create a new browser session",
        "operationId": "create_browser_session_v1_browser_sessions_post",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrowserSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created browser session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrowserSessionResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized - Invalid or missing authentication"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "browser_session",
        "x-fern-sdk-method-name": "create_browser_session",
        "x-fern-examples": [
          {
            "code-samples": [
              {
                "sdk": "python",
                "code": "from skyvern import Skyvern\n\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\nbrowser_session = await skyvern.browser_sessions.create_browser_session(timeout=60)\nprint(browser_session)\n"
              }
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Browser Sessions"
        ],
        "summary": "Get all active browser sessions",
        "description": "Get all active browser sessions for the organization",
        "operationId": "get_browser_sessions_v1_browser_sessions_get",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all active browser sessions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrowserSessionResponse"
                  },
                  "title": "Response Get Browser Sessions V1 Browser Sessions Get"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized - Invalid or missing authentication"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "browser_session",
        "x-fern-sdk-method-name": "get_browser_sessions",
        "x-fern-examples": [
          {
            "code-samples": [
              {
                "sdk": "python",
                "code": "from skyvern import Skyvern\n\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\nbrowser_sessions = await skyvern.browser_sessions.get_browser_sessions()\nprint(browser_sessions)\n"
              }
            ]
          }
        ]
      }
    },
    "/v1/browser_sessions/{browser_session_id}/close": {
      "post": {
        "tags": [
          "Browser Sessions"
        ],
        "summary": "Close a browser session",
        "description": "Close a browser session",
        "operationId": "close_browser_session_v1_browser_sessions__browser_session_id__close_post",
        "parameters": [
          {
            "name": "browser_session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the browser session to close. completed_at will be set when the browser session is closed. browser_session_id starts with `pbs_`",
              "examples": [
                "pbs_123456"
              ],
              "title": "Browser Session Id"
            },
            "description": "The ID of the browser session to close. completed_at will be set when the browser session is closed. browser_session_id starts with `pbs_`"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully closed browser session",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "403": {
            "description": "Unauthorized - Invalid or missing authentication"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "browser_session",
        "x-fern-sdk-method-name": "close_browser_session",
        "x-fern-examples": [
          {
            "code-samples": [
              {
                "sdk": "python",
                "code": "from skyvern import Skyvern\n\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\nawait skyvern.browser_sessions.close_browser_session(browser_session_id=\"pbs_123\")\n"
              }
            ]
          }
        ]
      }
    },
    "/v1/browser_sessions/{browser_session_id}": {
      "get": {
        "tags": [
          "Browser Sessions"
        ],
        "summary": "Get browser session details",
        "description": "Get details about a specific browser session by ID",
        "operationId": "get_browser_session_v1_browser_sessions__browser_session_id__get",
        "parameters": [
          {
            "name": "browser_session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the browser session. browser_session_id starts with `pbs_`",
              "examples": [
                "pbs_123456"
              ],
              "title": "Browser Session Id"
            },
            "description": "The ID of the browser session. browser_session_id starts with `pbs_`"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved browser session details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrowserSessionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Browser session not found"
          },
          "403": {
            "description": "Unauthorized - Invalid or missing authentication"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "browser_session",
        "x-fern-sdk-method-name": "get_browser_session",
        "x-fern-examples": [
          {
            "code-samples": [
              {
                "sdk": "python",
                "code": "from skyvern import Skyvern\n\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\nbrowser_session = await skyvern.browser_sessions.get_browser_session(browser_session_id=\"pbs_123\")\nprint(browser_session)\n"
              }
            ]
          }
        ]
      }
    },
    "/v1/credentials/totp": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "summary": "Send TOTP (2FA, MFA) code to Skyvern",
        "description": "Forward a TOTP (2FA, MFA) email or sms message containing the code to Skyvern. This endpoint stores the code in database so that Skyvern can use it while running tasks/workflows.",
        "operationId": "send_totp_code_v1_credentials_totp_post",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TOTPCodeCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TOTPCode"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "credentials",
        "x-fern-sdk-method-name": "send_totp_code"
      }
    },
    "/v1/credentials": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "summary": "Create credential",
        "description": "Creates a new credential for the current organization",
        "operationId": "create_credential_v1_credentials_post",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCredentialRequest",
                "description": "The credential data to create",
                "openapi_extra": {
                  "x-fern-sdk-parameter-name": "data"
                }
              },
              "example": {
                "name": "My Credential",
                "credential_type": "PASSWORD",
                "credential": {
                  "username": "user@example.com",
                  "password": "securepassword123",
                  "totp": "JBSWY3DPEHPK3PXP"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "credentials",
        "x-fern-sdk-method-name": "create_credential",
        "x-fern-examples": [
          {
            "code-samples": [
              {
                "sdk": "python",
                "code": "from skyvern import Skyvern\n\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\nawait skyvern.credentials.create_credential(\n    name=\"My Credential\",\n    credential_type=\"password\",\n    credential={\"username\": \"username\", \"password\": \"password\"},\n)\n"
              },
              {
                "sdk": "python",
                "code": "from skyvern import Skyvern\n\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\nawait skyvern.credentials.create_credential(\n    name=\"My Credit Card\",\n    credential_type=\"credit_card\",\n    credential={\n        \"card_number\": \"4242424242424242\",\n        \"card_cvv\": \"424\",\n        \"card_exp_month\": \"12\",\n        \"card_exp_year\": \"2028\",\n        \"card_brand\": \"visa\",\n        \"card_holder_name\": \"John Doe\",\n    },\n)\n"
              }
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Credentials"
        ],
        "summary": "Get all credentials",
        "description": "Retrieves a paginated list of credentials for the current organization",
        "operationId": "get_credentials_v1_credentials_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number for pagination",
              "openapi_extra": {
                "x-fern-sdk-parameter-name": "page"
              },
              "default": 1,
              "title": "Page"
            },
            "description": "Page number for pagination",
            "example": 1
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Number of items per page",
              "openapi_extra": {
                "x-fern-sdk-parameter-name": "page_size"
              },
              "default": 10,
              "title": "Page Size"
            },
            "description": "Number of items per page",
            "example": 10
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CredentialResponse"
                  },
                  "title": "Response Get Credentials V1 Credentials Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "credentials",
        "x-fern-sdk-method-name": "get_credentials",
        "x-fern-examples": [
          {
            "code-samples": [
              {
                "sdk": "python",
                "code": "from skyvern import Skyvern\n\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\ncredentials = await skyvern.credentials.get_credentials()\nprint(credentials)\n"
              }
            ]
          }
        ]
      }
    },
    "/v1/credentials/{credential_id}/delete": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "summary": "Delete credential",
        "description": "Deletes a specific credential by its ID",
        "operationId": "delete_credential_v1_credentials__credential_id__delete_post",
        "parameters": [
          {
            "name": "credential_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier of the credential to delete",
              "openapi_extra": {
                "x-fern-sdk-parameter-name": "credential_id"
              },
              "title": "Credential Id"
            },
            "description": "The unique identifier of the credential to delete",
            "example": "cred_1234567890"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "credentials",
        "x-fern-sdk-method-name": "delete_credential",
        "x-fern-examples": [
          {
            "code-samples": [
              {
                "sdk": "python",
                "code": "from skyvern import Skyvern\n\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\nawait skyvern.credentials.delete_credential(credential_id=\"cred_123\")\n"
              }
            ]
          }
        ]
      }
    },
    "/v1/credentials/{credential_id}": {
      "get": {
        "tags": [
          "Credentials"
        ],
        "summary": "Get credential by ID",
        "description": "Retrieves a specific credential by its ID",
        "operationId": "get_credential_v1_credentials__credential_id__get",
        "parameters": [
          {
            "name": "credential_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier of the credential",
              "openapi_extra": {
                "x-fern-sdk-parameter-name": "credential_id"
              },
              "title": "Credential Id"
            },
            "description": "The unique identifier of the credential",
            "example": "cred_1234567890"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key for authentication",
              "title": "X-Api-Key"
            },
            "description": "API key for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "credentials",
        "x-fern-sdk-method-name": "get_credential",
        "x-fern-examples": [
          {
            "code-samples": [
              {
                "sdk": "python",
                "code": "from skyvern import Skyvern\n\nskyvern = Skyvern(api_key=\"YOUR_API_KEY\")\ncredential = await skyvern.credentials.get_credential(credential_id=\"cred_123\")\nprint(credential)\n"
              }
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AWSSecretParameter": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "aws_secret",
            "title": "Parameter Type",
            "default": "aws_secret"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "aws_secret_parameter_id": {
            "type": "string",
            "title": "Aws Secret Parameter Id"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "aws_key": {
            "type": "string",
            "title": "Aws Key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          }
        },
        "type": "object",
        "required": [
          "key",
          "aws_secret_parameter_id",
          "workflow_id",
          "aws_key",
          "created_at",
          "modified_at"
        ],
        "title": "AWSSecretParameter"
      },
      "AWSSecretParameterYAML": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "aws_secret",
            "title": "Parameter Type",
            "default": "aws_secret"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "aws_key": {
            "type": "string",
            "title": "Aws Key"
          }
        },
        "type": "object",
        "required": [
          "key",
          "aws_key"
        ],
        "title": "AWSSecretParameterYAML"
      },
      "ActionBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "action",
            "title": "Block Type",
            "default": "action"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "task_type": {
            "type": "string",
            "title": "Task Type",
            "default": "general"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "engine": {
            "$ref": "#/components/schemas/RunEngine",
            "default": "skyvern-1.0"
          },
          "complete_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complete Criterion"
          },
          "terminate_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terminate Criterion"
          },
          "navigation_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Navigation Goal"
          },
          "data_extraction_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Extraction Goal"
          },
          "data_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Schema"
          },
          "error_code_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code Mapping"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 0
          },
          "max_steps_per_run": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Steps Per Run"
          },
          "parameters": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowParameter"
                },
                {
                  "$ref": "#/components/schemas/ContextParameter"
                },
                {
                  "$ref": "#/components/schemas/AWSSecretParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenLoginCredentialParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenSensitiveInformationParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenCreditCardDataParameter"
                },
                {
                  "$ref": "#/components/schemas/OutputParameter"
                },
                {
                  "$ref": "#/components/schemas/CredentialParameter"
                }
              ],
              "discriminator": {
                "propertyName": "parameter_type",
                "mapping": {
                  "aws_secret": "#/components/schemas/AWSSecretParameter",
                  "bitwarden_credit_card_data": "#/components/schemas/BitwardenCreditCardDataParameter",
                  "bitwarden_login_credential": "#/components/schemas/BitwardenLoginCredentialParameter",
                  "bitwarden_sensitive_information": "#/components/schemas/BitwardenSensitiveInformationParameter",
                  "context": "#/components/schemas/ContextParameter",
                  "credential": "#/components/schemas/CredentialParameter",
                  "output": "#/components/schemas/OutputParameter",
                  "workflow": "#/components/schemas/WorkflowParameter"
                }
              }
            },
            "type": "array",
            "title": "Parameters",
            "default": []
          },
          "complete_on_download": {
            "type": "boolean",
            "title": "Complete On Download",
            "default": false
          },
          "download_suffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Suffix"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "cache_actions": {
            "type": "boolean",
            "title": "Cache Actions",
            "default": false
          },
          "complete_verification": {
            "type": "boolean",
            "title": "Complete Verification",
            "default": true
          },
          "include_action_history_in_verification": {
            "type": "boolean",
            "title": "Include Action History In Verification",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter"
        ],
        "title": "ActionBlock"
      },
      "ActionBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "action",
            "title": "Block Type",
            "default": "action"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "navigation_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Navigation Goal"
          },
          "error_code_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code Mapping"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 0
          },
          "parameter_keys": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameter Keys"
          },
          "complete_on_download": {
            "type": "boolean",
            "title": "Complete On Download",
            "default": false
          },
          "download_suffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Suffix"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "cache_actions": {
            "type": "boolean",
            "title": "Cache Actions",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label"
        ],
        "title": "ActionBlockYAML"
      },
      "BitwardenCreditCardDataParameter": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "bitwarden_credit_card_data",
            "title": "Parameter Type",
            "default": "bitwarden_credit_card_data"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "bitwarden_credit_card_data_parameter_id": {
            "type": "string",
            "title": "Bitwarden Credit Card Data Parameter Id"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "bitwarden_client_id_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Client Id Aws Secret Key"
          },
          "bitwarden_client_secret_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Client Secret Aws Secret Key"
          },
          "bitwarden_master_password_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Master Password Aws Secret Key"
          },
          "bitwarden_collection_id": {
            "type": "string",
            "title": "Bitwarden Collection Id"
          },
          "bitwarden_item_id": {
            "type": "string",
            "title": "Bitwarden Item Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          }
        },
        "type": "object",
        "required": [
          "key",
          "bitwarden_credit_card_data_parameter_id",
          "workflow_id",
          "bitwarden_client_id_aws_secret_key",
          "bitwarden_client_secret_aws_secret_key",
          "bitwarden_master_password_aws_secret_key",
          "bitwarden_collection_id",
          "bitwarden_item_id",
          "created_at",
          "modified_at"
        ],
        "title": "BitwardenCreditCardDataParameter"
      },
      "BitwardenCreditCardDataParameterYAML": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "bitwarden_credit_card_data",
            "title": "Parameter Type",
            "default": "bitwarden_credit_card_data"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "bitwarden_client_id_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Client Id Aws Secret Key"
          },
          "bitwarden_client_secret_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Client Secret Aws Secret Key"
          },
          "bitwarden_master_password_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Master Password Aws Secret Key"
          },
          "bitwarden_collection_id": {
            "type": "string",
            "title": "Bitwarden Collection Id"
          },
          "bitwarden_item_id": {
            "type": "string",
            "title": "Bitwarden Item Id"
          }
        },
        "type": "object",
        "required": [
          "key",
          "bitwarden_client_id_aws_secret_key",
          "bitwarden_client_secret_aws_secret_key",
          "bitwarden_master_password_aws_secret_key",
          "bitwarden_collection_id",
          "bitwarden_item_id"
        ],
        "title": "BitwardenCreditCardDataParameterYAML"
      },
      "BitwardenLoginCredentialParameter": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "bitwarden_login_credential",
            "title": "Parameter Type",
            "default": "bitwarden_login_credential"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "bitwarden_login_credential_parameter_id": {
            "type": "string",
            "title": "Bitwarden Login Credential Parameter Id"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "bitwarden_client_id_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Client Id Aws Secret Key"
          },
          "bitwarden_client_secret_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Client Secret Aws Secret Key"
          },
          "bitwarden_master_password_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Master Password Aws Secret Key"
          },
          "url_parameter_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url Parameter Key"
          },
          "bitwarden_collection_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bitwarden Collection Id"
          },
          "bitwarden_item_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bitwarden Item Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          }
        },
        "type": "object",
        "required": [
          "key",
          "bitwarden_login_credential_parameter_id",
          "workflow_id",
          "bitwarden_client_id_aws_secret_key",
          "bitwarden_client_secret_aws_secret_key",
          "bitwarden_master_password_aws_secret_key",
          "created_at",
          "modified_at"
        ],
        "title": "BitwardenLoginCredentialParameter"
      },
      "BitwardenLoginCredentialParameterYAML": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "bitwarden_login_credential",
            "title": "Parameter Type",
            "default": "bitwarden_login_credential"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "bitwarden_client_id_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Client Id Aws Secret Key"
          },
          "bitwarden_client_secret_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Client Secret Aws Secret Key"
          },
          "bitwarden_master_password_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Master Password Aws Secret Key"
          },
          "url_parameter_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url Parameter Key"
          },
          "bitwarden_collection_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bitwarden Collection Id"
          },
          "bitwarden_item_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bitwarden Item Id"
          }
        },
        "type": "object",
        "required": [
          "key",
          "bitwarden_client_id_aws_secret_key",
          "bitwarden_client_secret_aws_secret_key",
          "bitwarden_master_password_aws_secret_key"
        ],
        "title": "BitwardenLoginCredentialParameterYAML"
      },
      "BitwardenSensitiveInformationParameter": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "bitwarden_sensitive_information",
            "title": "Parameter Type",
            "default": "bitwarden_sensitive_information"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "bitwarden_sensitive_information_parameter_id": {
            "type": "string",
            "title": "Bitwarden Sensitive Information Parameter Id"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "bitwarden_client_id_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Client Id Aws Secret Key"
          },
          "bitwarden_client_secret_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Client Secret Aws Secret Key"
          },
          "bitwarden_master_password_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Master Password Aws Secret Key"
          },
          "bitwarden_collection_id": {
            "type": "string",
            "title": "Bitwarden Collection Id"
          },
          "bitwarden_identity_key": {
            "type": "string",
            "title": "Bitwarden Identity Key"
          },
          "bitwarden_identity_fields": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Bitwarden Identity Fields"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          }
        },
        "type": "object",
        "required": [
          "key",
          "bitwarden_sensitive_information_parameter_id",
          "workflow_id",
          "bitwarden_client_id_aws_secret_key",
          "bitwarden_client_secret_aws_secret_key",
          "bitwarden_master_password_aws_secret_key",
          "bitwarden_collection_id",
          "bitwarden_identity_key",
          "bitwarden_identity_fields",
          "created_at",
          "modified_at"
        ],
        "title": "BitwardenSensitiveInformationParameter"
      },
      "BitwardenSensitiveInformationParameterYAML": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "bitwarden_sensitive_information",
            "title": "Parameter Type",
            "default": "bitwarden_sensitive_information"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "bitwarden_client_id_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Client Id Aws Secret Key"
          },
          "bitwarden_client_secret_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Client Secret Aws Secret Key"
          },
          "bitwarden_master_password_aws_secret_key": {
            "type": "string",
            "title": "Bitwarden Master Password Aws Secret Key"
          },
          "bitwarden_collection_id": {
            "type": "string",
            "title": "Bitwarden Collection Id"
          },
          "bitwarden_identity_key": {
            "type": "string",
            "title": "Bitwarden Identity Key"
          },
          "bitwarden_identity_fields": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Bitwarden Identity Fields"
          }
        },
        "type": "object",
        "required": [
          "key",
          "bitwarden_client_id_aws_secret_key",
          "bitwarden_client_secret_aws_secret_key",
          "bitwarden_master_password_aws_secret_key",
          "bitwarden_collection_id",
          "bitwarden_identity_key",
          "bitwarden_identity_fields"
        ],
        "title": "BitwardenSensitiveInformationParameterYAML"
      },
      "BrowserSessionResponse": {
        "properties": {
          "browser_session_id": {
            "type": "string",
            "title": "Browser Session Id",
            "description": "Unique identifier for the browser session. browser_session_id starts with `pbs_`.",
            "examples": [
              "pbs_123456"
            ]
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id",
            "description": "ID of the organization that owns this session"
          },
          "runnable_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Runnable Type",
            "description": "Type of the current runnable associated with this session (workflow, task etc)",
            "examples": [
              "task",
              "workflow_run"
            ]
          },
          "runnable_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Runnable Id",
            "description": "ID of the current runnable",
            "examples": [
              "tsk_123456",
              "wr_123456"
            ]
          },
          "timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout",
            "description": "Timeout in minutes for the session. Timeout is applied after the session is started. Defaults to 60 minutes.",
            "examples": [60, 120]
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At",
            "description": "Timestamp when the session was started"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "Timestamp when the session was completed"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp when the session was created (the timestamp for the initial request)"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At",
            "description": "Timestamp when the session was last modified"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At",
            "description": "Timestamp when the session was deleted, if applicable"
          }
        },
        "type": "object",
        "required": [
          "browser_session_id",
          "organization_id",
          "created_at",
          "modified_at"
        ],
        "title": "BrowserSessionResponse",
        "description": "Response model for browser session information."
      },
      "CodeBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "code",
            "title": "Block Type",
            "default": "code"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "parameters": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowParameter"
                },
                {
                  "$ref": "#/components/schemas/ContextParameter"
                },
                {
                  "$ref": "#/components/schemas/AWSSecretParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenLoginCredentialParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenSensitiveInformationParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenCreditCardDataParameter"
                },
                {
                  "$ref": "#/components/schemas/OutputParameter"
                },
                {
                  "$ref": "#/components/schemas/CredentialParameter"
                }
              ],
              "discriminator": {
                "propertyName": "parameter_type",
                "mapping": {
                  "aws_secret": "#/components/schemas/AWSSecretParameter",
                  "bitwarden_credit_card_data": "#/components/schemas/BitwardenCreditCardDataParameter",
                  "bitwarden_login_credential": "#/components/schemas/BitwardenLoginCredentialParameter",
                  "bitwarden_sensitive_information": "#/components/schemas/BitwardenSensitiveInformationParameter",
                  "context": "#/components/schemas/ContextParameter",
                  "credential": "#/components/schemas/CredentialParameter",
                  "output": "#/components/schemas/OutputParameter",
                  "workflow": "#/components/schemas/WorkflowParameter"
                }
              }
            },
            "type": "array",
            "title": "Parameters",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter",
          "code"
        ],
        "title": "CodeBlock"
      },
      "CodeBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "code",
            "title": "Block Type",
            "default": "code"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "parameter_keys": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameter Keys"
          }
        },
        "type": "object",
        "required": [
          "label",
          "code"
        ],
        "title": "CodeBlockYAML"
      },
      "ContextParameter": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "context",
            "title": "Parameter Type",
            "default": "context"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowParameter"
              },
              {
                "$ref": "#/components/schemas/ContextParameter"
              },
              {
                "$ref": "#/components/schemas/AWSSecretParameter"
              },
              {
                "$ref": "#/components/schemas/BitwardenLoginCredentialParameter"
              },
              {
                "$ref": "#/components/schemas/BitwardenSensitiveInformationParameter"
              },
              {
                "$ref": "#/components/schemas/BitwardenCreditCardDataParameter"
              },
              {
                "$ref": "#/components/schemas/OutputParameter"
              },
              {
                "$ref": "#/components/schemas/CredentialParameter"
              }
            ],
            "title": "Source"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              },
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "key",
          "source"
        ],
        "title": "ContextParameter"
      },
      "ContextParameterYAML": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "context",
            "title": "Parameter Type",
            "default": "context"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "source_parameter_key": {
            "type": "string",
            "title": "Source Parameter Key"
          }
        },
        "type": "object",
        "required": [
          "key",
          "source_parameter_key"
        ],
        "title": "ContextParameterYAML"
      },
      "CreateBrowserSessionRequest": {
        "properties": {
          "timeout": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10080,
                "minimum": 5
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout",
            "description": "Timeout in minutes for the session. Timeout is applied after the session is started. Must be between 5 and 10080. Defaults to 60.",
            "default": 60
          }
        },
        "type": "object",
        "title": "CreateBrowserSessionRequest"
      },
      "CreateCredentialRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name of the credential",
            "examples": [
              "Amazon Login"
            ]
          },
          "credential_type": {
            "$ref": "#/components/schemas/CredentialType",
            "description": "Type of credential to create"
          },
          "credential": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NonEmptyPasswordCredential"
              },
              {
                "$ref": "#/components/schemas/NonEmptyCreditCardCredential"
              }
            ],
            "title": "Credential",
            "description": "The credential data to store",
            "examples": [
              {
                "password": "securepassword123",
                "username": "user@example.com"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "credential_type",
          "credential"
        ],
        "title": "CreateCredentialRequest",
        "description": "Request model for creating a new credential."
      },
      "CredentialParameter": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "credential",
            "title": "Parameter Type",
            "default": "credential"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "credential_parameter_id": {
            "type": "string",
            "title": "Credential Parameter Id"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "credential_id": {
            "type": "string",
            "title": "Credential Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          }
        },
        "type": "object",
        "required": [
          "key",
          "credential_parameter_id",
          "workflow_id",
          "credential_id",
          "created_at",
          "modified_at"
        ],
        "title": "CredentialParameter"
      },
      "CredentialParameterYAML": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "credential",
            "title": "Parameter Type",
            "default": "credential"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "credential_id": {
            "type": "string",
            "title": "Credential Id"
          }
        },
        "type": "object",
        "required": [
          "key",
          "credential_id"
        ],
        "title": "CredentialParameterYAML"
      },
      "CredentialResponse": {
        "properties": {
          "credential_id": {
            "type": "string",
            "title": "Credential Id",
            "description": "Unique identifier for the credential",
            "examples": [
              "cred_1234567890"
            ]
          },
          "credential": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PasswordCredentialResponse"
              },
              {
                "$ref": "#/components/schemas/CreditCardCredentialResponse"
              }
            ],
            "title": "Credential",
            "description": "The credential data"
          },
          "credential_type": {
            "$ref": "#/components/schemas/CredentialType",
            "description": "Type of the credential"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name of the credential",
            "examples": [
              "Amazon Login"
            ]
          }
        },
        "type": "object",
        "required": [
          "credential_id",
          "credential",
          "credential_type",
          "name"
        ],
        "title": "CredentialResponse",
        "description": "Response model for credential operations."
      },
      "CredentialType": {
        "type": "string",
        "enum": [
          "password",
          "credit_card"
        ],
        "title": "CredentialType",
        "description": "Type of credential stored in the system."
      },
      "CreditCardCredentialResponse": {
        "properties": {
          "last_four": {
            "type": "string",
            "title": "Last Four",
            "description": "Last four digits of the credit card number",
            "examples": [
              "1234"
            ]
          },
          "brand": {
            "type": "string",
            "title": "Brand",
            "description": "Brand of the credit card",
            "examples": [
              "visa"
            ]
          }
        },
        "type": "object",
        "required": [
          "last_four",
          "brand"
        ],
        "title": "CreditCardCredentialResponse",
        "description": "Response model for credit card credentials, containing only the last four digits and brand."
      },
      "DownloadToS3Block": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "download_to_s3",
            "title": "Block Type",
            "default": "download_to_s3"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter",
          "url"
        ],
        "title": "DownloadToS3Block"
      },
      "DownloadToS3BlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "download_to_s3",
            "title": "Block Type",
            "default": "download_to_s3"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "label",
          "url"
        ],
        "title": "DownloadToS3BlockYAML"
      },
      "ExtractionBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "extraction",
            "title": "Block Type",
            "default": "extraction"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "task_type": {
            "type": "string",
            "title": "Task Type",
            "default": "general"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "engine": {
            "$ref": "#/components/schemas/RunEngine",
            "default": "skyvern-1.0"
          },
          "complete_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complete Criterion"
          },
          "terminate_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terminate Criterion"
          },
          "navigation_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Navigation Goal"
          },
          "data_extraction_goal": {
            "type": "string",
            "title": "Data Extraction Goal"
          },
          "data_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Schema"
          },
          "error_code_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code Mapping"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 0
          },
          "max_steps_per_run": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Steps Per Run"
          },
          "parameters": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowParameter"
                },
                {
                  "$ref": "#/components/schemas/ContextParameter"
                },
                {
                  "$ref": "#/components/schemas/AWSSecretParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenLoginCredentialParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenSensitiveInformationParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenCreditCardDataParameter"
                },
                {
                  "$ref": "#/components/schemas/OutputParameter"
                },
                {
                  "$ref": "#/components/schemas/CredentialParameter"
                }
              ],
              "discriminator": {
                "propertyName": "parameter_type",
                "mapping": {
                  "aws_secret": "#/components/schemas/AWSSecretParameter",
                  "bitwarden_credit_card_data": "#/components/schemas/BitwardenCreditCardDataParameter",
                  "bitwarden_login_credential": "#/components/schemas/BitwardenLoginCredentialParameter",
                  "bitwarden_sensitive_information": "#/components/schemas/BitwardenSensitiveInformationParameter",
                  "context": "#/components/schemas/ContextParameter",
                  "credential": "#/components/schemas/CredentialParameter",
                  "output": "#/components/schemas/OutputParameter",
                  "workflow": "#/components/schemas/WorkflowParameter"
                }
              }
            },
            "type": "array",
            "title": "Parameters",
            "default": []
          },
          "complete_on_download": {
            "type": "boolean",
            "title": "Complete On Download",
            "default": false
          },
          "download_suffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Suffix"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "cache_actions": {
            "type": "boolean",
            "title": "Cache Actions",
            "default": false
          },
          "complete_verification": {
            "type": "boolean",
            "title": "Complete Verification",
            "default": true
          },
          "include_action_history_in_verification": {
            "type": "boolean",
            "title": "Include Action History In Verification",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter",
          "data_extraction_goal"
        ],
        "title": "ExtractionBlock"
      },
      "ExtractionBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "extraction",
            "title": "Block Type",
            "default": "extraction"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "data_extraction_goal": {
            "type": "string",
            "title": "Data Extraction Goal"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "data_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Schema"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 0
          },
          "max_steps_per_run": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Steps Per Run"
          },
          "parameter_keys": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameter Keys"
          },
          "cache_actions": {
            "type": "boolean",
            "title": "Cache Actions",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label",
          "data_extraction_goal"
        ],
        "title": "ExtractionBlockYAML"
      },
      "FileDownloadBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "file_download",
            "title": "Block Type",
            "default": "file_download"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "task_type": {
            "type": "string",
            "title": "Task Type",
            "default": "general"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "engine": {
            "$ref": "#/components/schemas/RunEngine",
            "default": "skyvern-1.0"
          },
          "complete_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complete Criterion"
          },
          "terminate_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terminate Criterion"
          },
          "navigation_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Navigation Goal"
          },
          "data_extraction_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Extraction Goal"
          },
          "data_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Schema"
          },
          "error_code_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code Mapping"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 0
          },
          "max_steps_per_run": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Steps Per Run"
          },
          "parameters": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowParameter"
                },
                {
                  "$ref": "#/components/schemas/ContextParameter"
                },
                {
                  "$ref": "#/components/schemas/AWSSecretParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenLoginCredentialParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenSensitiveInformationParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenCreditCardDataParameter"
                },
                {
                  "$ref": "#/components/schemas/OutputParameter"
                },
                {
                  "$ref": "#/components/schemas/CredentialParameter"
                }
              ],
              "discriminator": {
                "propertyName": "parameter_type",
                "mapping": {
                  "aws_secret": "#/components/schemas/AWSSecretParameter",
                  "bitwarden_credit_card_data": "#/components/schemas/BitwardenCreditCardDataParameter",
                  "bitwarden_login_credential": "#/components/schemas/BitwardenLoginCredentialParameter",
                  "bitwarden_sensitive_information": "#/components/schemas/BitwardenSensitiveInformationParameter",
                  "context": "#/components/schemas/ContextParameter",
                  "credential": "#/components/schemas/CredentialParameter",
                  "output": "#/components/schemas/OutputParameter",
                  "workflow": "#/components/schemas/WorkflowParameter"
                }
              }
            },
            "type": "array",
            "title": "Parameters",
            "default": []
          },
          "complete_on_download": {
            "type": "boolean",
            "title": "Complete On Download",
            "default": false
          },
          "download_suffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Suffix"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "cache_actions": {
            "type": "boolean",
            "title": "Cache Actions",
            "default": false
          },
          "complete_verification": {
            "type": "boolean",
            "title": "Complete Verification",
            "default": true
          },
          "include_action_history_in_verification": {
            "type": "boolean",
            "title": "Include Action History In Verification",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter"
        ],
        "title": "FileDownloadBlock"
      },
      "FileDownloadBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "file_download",
            "title": "Block Type",
            "default": "file_download"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "navigation_goal": {
            "type": "string",
            "title": "Navigation Goal"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "error_code_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code Mapping"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 0
          },
          "max_steps_per_run": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Steps Per Run"
          },
          "parameter_keys": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameter Keys"
          },
          "download_suffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Suffix"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "cache_actions": {
            "type": "boolean",
            "title": "Cache Actions",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label",
          "navigation_goal"
        ],
        "title": "FileDownloadBlockYAML"
      },
      "FileInfo": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "URL to access the file"
          },
          "checksum": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checksum",
            "description": "SHA-256 checksum of the file"
          },
          "filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filename",
            "description": "Original filename"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "FileInfo",
        "description": "Information about a downloaded file, including URL and checksum."
      },
      "FileParserBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "file_url_parser",
            "title": "Block Type",
            "default": "file_url_parser"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "file_url": {
            "type": "string",
            "title": "File Url"
          },
          "file_type": {
            "$ref": "#/components/schemas/FileType"
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter",
          "file_url",
          "file_type"
        ],
        "title": "FileParserBlock"
      },
      "FileParserBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "file_url_parser",
            "title": "Block Type",
            "default": "file_url_parser"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "file_url": {
            "type": "string",
            "title": "File Url"
          },
          "file_type": {
            "$ref": "#/components/schemas/FileType"
          }
        },
        "type": "object",
        "required": [
          "label",
          "file_url",
          "file_type"
        ],
        "title": "FileParserBlockYAML"
      },
      "FileStorageType": {
        "type": "string",
        "enum": [
          "s3"
        ],
        "title": "FileStorageType"
      },
      "FileType": {
        "type": "string",
        "enum": [
          "csv"
        ],
        "title": "FileType"
      },
      "FileUploadBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "file_upload",
            "title": "Block Type",
            "default": "file_upload"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "storage_type": {
            "$ref": "#/components/schemas/FileStorageType",
            "default": "s3"
          },
          "s3_bucket": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Bucket"
          },
          "aws_access_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aws Access Key Id"
          },
          "aws_secret_access_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aws Secret Access Key"
          },
          "region_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region Name"
          },
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter"
        ],
        "title": "FileUploadBlock"
      },
      "FileUploadBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "file_upload",
            "title": "Block Type",
            "default": "file_upload"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "storage_type": {
            "$ref": "#/components/schemas/FileStorageType",
            "default": "s3"
          },
          "s3_bucket": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Bucket"
          },
          "aws_access_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aws Access Key Id"
          },
          "aws_secret_access_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aws Secret Access Key"
          },
          "region_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region Name"
          },
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "label"
        ],
        "title": "FileUploadBlockYAML"
      },
      "ForLoopBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "for_loop",
            "title": "Block Type",
            "default": "for_loop"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "loop_blocks": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ForLoopBlock"
                },
                {
                  "$ref": "#/components/schemas/TaskBlock"
                },
                {
                  "$ref": "#/components/schemas/CodeBlock"
                },
                {
                  "$ref": "#/components/schemas/TextPromptBlock"
                },
                {
                  "$ref": "#/components/schemas/DownloadToS3Block"
                },
                {
                  "$ref": "#/components/schemas/UploadToS3Block"
                },
                {
                  "$ref": "#/components/schemas/SendEmailBlock"
                },
                {
                  "$ref": "#/components/schemas/FileParserBlock"
                },
                {
                  "$ref": "#/components/schemas/PDFParserBlock"
                },
                {
                  "$ref": "#/components/schemas/ValidationBlock"
                },
                {
                  "$ref": "#/components/schemas/ActionBlock"
                },
                {
                  "$ref": "#/components/schemas/NavigationBlock"
                },
                {
                  "$ref": "#/components/schemas/ExtractionBlock"
                },
                {
                  "$ref": "#/components/schemas/LoginBlock"
                },
                {
                  "$ref": "#/components/schemas/WaitBlock"
                },
                {
                  "$ref": "#/components/schemas/FileDownloadBlock"
                },
                {
                  "$ref": "#/components/schemas/UrlBlock"
                },
                {
                  "$ref": "#/components/schemas/TaskV2Block"
                },
                {
                  "$ref": "#/components/schemas/FileUploadBlock"
                }
              ],
              "discriminator": {
                "propertyName": "block_type",
                "mapping": {
                  "action": "#/components/schemas/ActionBlock",
                  "code": "#/components/schemas/CodeBlock",
                  "download_to_s3": "#/components/schemas/DownloadToS3Block",
                  "extraction": "#/components/schemas/ExtractionBlock",
                  "file_download": "#/components/schemas/FileDownloadBlock",
                  "file_upload": "#/components/schemas/FileUploadBlock",
                  "file_url_parser": "#/components/schemas/FileParserBlock",
                  "for_loop": "#/components/schemas/ForLoopBlock",
                  "goto_url": "#/components/schemas/UrlBlock",
                  "login": "#/components/schemas/LoginBlock",
                  "navigation": "#/components/schemas/NavigationBlock",
                  "pdf_parser": "#/components/schemas/PDFParserBlock",
                  "send_email": "#/components/schemas/SendEmailBlock",
                  "task": "#/components/schemas/TaskBlock",
                  "task_v2": "#/components/schemas/TaskV2Block",
                  "text_prompt": "#/components/schemas/TextPromptBlock",
                  "upload_to_s3": "#/components/schemas/UploadToS3Block",
                  "validation": "#/components/schemas/ValidationBlock",
                  "wait": "#/components/schemas/WaitBlock"
                }
              }
            },
            "type": "array",
            "title": "Loop Blocks"
          },
          "loop_over": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/WorkflowParameter"
                  },
                  {
                    "$ref": "#/components/schemas/ContextParameter"
                  },
                  {
                    "$ref": "#/components/schemas/AWSSecretParameter"
                  },
                  {
                    "$ref": "#/components/schemas/BitwardenLoginCredentialParameter"
                  },
                  {
                    "$ref": "#/components/schemas/BitwardenSensitiveInformationParameter"
                  },
                  {
                    "$ref": "#/components/schemas/BitwardenCreditCardDataParameter"
                  },
                  {
                    "$ref": "#/components/schemas/OutputParameter"
                  },
                  {
                    "$ref": "#/components/schemas/CredentialParameter"
                  }
                ],
                "discriminator": {
                  "propertyName": "parameter_type",
                  "mapping": {
                    "aws_secret": "#/components/schemas/AWSSecretParameter",
                    "bitwarden_credit_card_data": "#/components/schemas/BitwardenCreditCardDataParameter",
                    "bitwarden_login_credential": "#/components/schemas/BitwardenLoginCredentialParameter",
                    "bitwarden_sensitive_information": "#/components/schemas/BitwardenSensitiveInformationParameter",
                    "context": "#/components/schemas/ContextParameter",
                    "credential": "#/components/schemas/CredentialParameter",
                    "output": "#/components/schemas/OutputParameter",
                    "workflow": "#/components/schemas/WorkflowParameter"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Loop Over"
          },
          "loop_variable_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Loop Variable Reference"
          },
          "complete_if_empty": {
            "type": "boolean",
            "title": "Complete If Empty",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter",
          "loop_blocks"
        ],
        "title": "ForLoopBlock"
      },
      "ForLoopBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "for_loop",
            "title": "Block Type",
            "default": "for_loop"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "loop_blocks": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TaskBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/ForLoopBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/CodeBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/TextPromptBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/DownloadToS3BlockYAML"
                },
                {
                  "$ref": "#/components/schemas/UploadToS3BlockYAML"
                },
                {
                  "$ref": "#/components/schemas/FileUploadBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/SendEmailBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/FileParserBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/ValidationBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/ActionBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/NavigationBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/ExtractionBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/LoginBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/WaitBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/FileDownloadBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/UrlBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/PDFParserBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/TaskV2BlockYAML"
                }
              ]
            },
            "type": "array",
            "title": "Loop Blocks"
          },
          "loop_over_parameter_key": {
            "type": "string",
            "title": "Loop Over Parameter Key",
            "default": ""
          },
          "loop_variable_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Loop Variable Reference"
          },
          "complete_if_empty": {
            "type": "boolean",
            "title": "Complete If Empty",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label",
          "loop_blocks"
        ],
        "title": "ForLoopBlockYAML"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LoginBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "login",
            "title": "Block Type",
            "default": "login"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "task_type": {
            "type": "string",
            "title": "Task Type",
            "default": "general"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "engine": {
            "$ref": "#/components/schemas/RunEngine",
            "default": "skyvern-1.0"
          },
          "complete_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complete Criterion"
          },
          "terminate_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terminate Criterion"
          },
          "navigation_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Navigation Goal"
          },
          "data_extraction_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Extraction Goal"
          },
          "data_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Schema"
          },
          "error_code_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code Mapping"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 0
          },
          "max_steps_per_run": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Steps Per Run"
          },
          "parameters": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowParameter"
                },
                {
                  "$ref": "#/components/schemas/ContextParameter"
                },
                {
                  "$ref": "#/components/schemas/AWSSecretParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenLoginCredentialParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenSensitiveInformationParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenCreditCardDataParameter"
                },
                {
                  "$ref": "#/components/schemas/OutputParameter"
                },
                {
                  "$ref": "#/components/schemas/CredentialParameter"
                }
              ],
              "discriminator": {
                "propertyName": "parameter_type",
                "mapping": {
                  "aws_secret": "#/components/schemas/AWSSecretParameter",
                  "bitwarden_credit_card_data": "#/components/schemas/BitwardenCreditCardDataParameter",
                  "bitwarden_login_credential": "#/components/schemas/BitwardenLoginCredentialParameter",
                  "bitwarden_sensitive_information": "#/components/schemas/BitwardenSensitiveInformationParameter",
                  "context": "#/components/schemas/ContextParameter",
                  "credential": "#/components/schemas/CredentialParameter",
                  "output": "#/components/schemas/OutputParameter",
                  "workflow": "#/components/schemas/WorkflowParameter"
                }
              }
            },
            "type": "array",
            "title": "Parameters",
            "default": []
          },
          "complete_on_download": {
            "type": "boolean",
            "title": "Complete On Download",
            "default": false
          },
          "download_suffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Suffix"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "cache_actions": {
            "type": "boolean",
            "title": "Cache Actions",
            "default": false
          },
          "complete_verification": {
            "type": "boolean",
            "title": "Complete Verification",
            "default": true
          },
          "include_action_history_in_verification": {
            "type": "boolean",
            "title": "Include Action History In Verification",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter"
        ],
        "title": "LoginBlock"
      },
      "LoginBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "login",
            "title": "Block Type",
            "default": "login"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "navigation_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Navigation Goal"
          },
          "error_code_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code Mapping"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 0
          },
          "max_steps_per_run": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Steps Per Run"
          },
          "parameter_keys": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameter Keys"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "cache_actions": {
            "type": "boolean",
            "title": "Cache Actions",
            "default": false
          },
          "complete_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complete Criterion"
          },
          "terminate_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terminate Criterion"
          },
          "complete_verification": {
            "type": "boolean",
            "title": "Complete Verification",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "label"
        ],
        "title": "LoginBlockYAML"
      },
      "NavigationBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "navigation",
            "title": "Block Type",
            "default": "navigation"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "task_type": {
            "type": "string",
            "title": "Task Type",
            "default": "general"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "engine": {
            "$ref": "#/components/schemas/RunEngine",
            "default": "skyvern-1.0"
          },
          "complete_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complete Criterion"
          },
          "terminate_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terminate Criterion"
          },
          "navigation_goal": {
            "type": "string",
            "title": "Navigation Goal"
          },
          "data_extraction_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Extraction Goal"
          },
          "data_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Schema"
          },
          "error_code_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code Mapping"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 0
          },
          "max_steps_per_run": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Steps Per Run"
          },
          "parameters": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowParameter"
                },
                {
                  "$ref": "#/components/schemas/ContextParameter"
                },
                {
                  "$ref": "#/components/schemas/AWSSecretParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenLoginCredentialParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenSensitiveInformationParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenCreditCardDataParameter"
                },
                {
                  "$ref": "#/components/schemas/OutputParameter"
                },
                {
                  "$ref": "#/components/schemas/CredentialParameter"
                }
              ],
              "discriminator": {
                "propertyName": "parameter_type",
                "mapping": {
                  "aws_secret": "#/components/schemas/AWSSecretParameter",
                  "bitwarden_credit_card_data": "#/components/schemas/BitwardenCreditCardDataParameter",
                  "bitwarden_login_credential": "#/components/schemas/BitwardenLoginCredentialParameter",
                  "bitwarden_sensitive_information": "#/components/schemas/BitwardenSensitiveInformationParameter",
                  "context": "#/components/schemas/ContextParameter",
                  "credential": "#/components/schemas/CredentialParameter",
                  "output": "#/components/schemas/OutputParameter",
                  "workflow": "#/components/schemas/WorkflowParameter"
                }
              }
            },
            "type": "array",
            "title": "Parameters",
            "default": []
          },
          "complete_on_download": {
            "type": "boolean",
            "title": "Complete On Download",
            "default": false
          },
          "download_suffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Suffix"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "cache_actions": {
            "type": "boolean",
            "title": "Cache Actions",
            "default": false
          },
          "complete_verification": {
            "type": "boolean",
            "title": "Complete Verification",
            "default": true
          },
          "include_action_history_in_verification": {
            "type": "boolean",
            "title": "Include Action History In Verification",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter",
          "navigation_goal"
        ],
        "title": "NavigationBlock"
      },
      "NavigationBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "navigation",
            "title": "Block Type",
            "default": "navigation"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "navigation_goal": {
            "type": "string",
            "title": "Navigation Goal"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "engine": {
            "$ref": "#/components/schemas/RunEngine",
            "default": "skyvern-1.0"
          },
          "error_code_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code Mapping"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 0
          },
          "max_steps_per_run": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Steps Per Run"
          },
          "parameter_keys": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameter Keys"
          },
          "complete_on_download": {
            "type": "boolean",
            "title": "Complete On Download",
            "default": false
          },
          "download_suffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Suffix"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "cache_actions": {
            "type": "boolean",
            "title": "Cache Actions",
            "default": false
          },
          "complete_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complete Criterion"
          },
          "terminate_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terminate Criterion"
          },
          "complete_verification": {
            "type": "boolean",
            "title": "Complete Verification",
            "default": true
          },
          "include_action_history_in_verification": {
            "type": "boolean",
            "title": "Include Action History In Verification",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label",
          "navigation_goal"
        ],
        "title": "NavigationBlockYAML"
      },
      "NonEmptyCreditCardCredential": {
        "properties": {
          "card_number": {
            "type": "string",
            "minLength": 1,
            "title": "Card Number",
            "description": "The full credit card number (must not be empty)",
            "examples": [
              "4111111111111111"
            ]
          },
          "card_cvv": {
            "type": "string",
            "minLength": 1,
            "title": "Card Cvv",
            "description": "The card's CVV (must not be empty)",
            "examples": [
              "123"
            ]
          },
          "card_exp_month": {
            "type": "string",
            "minLength": 1,
            "title": "Card Exp Month",
            "description": "The card's expiration month (must not be empty)",
            "examples": [
              "12"
            ]
          },
          "card_exp_year": {
            "type": "string",
            "minLength": 1,
            "title": "Card Exp Year",
            "description": "The card's expiration year (must not be empty)",
            "examples": [
              "2025"
            ]
          },
          "card_brand": {
            "type": "string",
            "minLength": 1,
            "title": "Card Brand",
            "description": "The card's brand (must not be empty)",
            "examples": [
              "visa"
            ]
          },
          "card_holder_name": {
            "type": "string",
            "minLength": 1,
            "title": "Card Holder Name",
            "description": "The name of the card holder (must not be empty)",
            "examples": [
              "John Doe"
            ]
          }
        },
        "type": "object",
        "required": [
          "card_number",
          "card_cvv",
          "card_exp_month",
          "card_exp_year",
          "card_brand",
          "card_holder_name"
        ],
        "title": "NonEmptyCreditCardCredential",
        "description": "Credit card credential model that requires non-empty values."
      },
      "NonEmptyPasswordCredential": {
        "properties": {
          "password": {
            "type": "string",
            "minLength": 1,
            "title": "Password",
            "description": "The password value (must not be empty)",
            "examples": [
              "securepassword123"
            ]
          },
          "username": {
            "type": "string",
            "minLength": 1,
            "title": "Username",
            "description": "The username associated with the credential (must not be empty)",
            "examples": [
              "user@example.com"
            ]
          },
          "totp": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp",
            "description": "Optional TOTP (Time-based One-Time Password) string used to generate 2FA codes",
            "examples": [
              "JBSWY3DPEHPK3PXP"
            ]
          }
        },
        "type": "object",
        "required": [
          "password",
          "username"
        ],
        "title": "NonEmptyPasswordCredential",
        "description": "Password credential model that requires non-empty values."
      },
      "OutputParameter": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "output",
            "title": "Parameter Type",
            "default": "output"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "output_parameter_id": {
            "type": "string",
            "title": "Output Parameter Id"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          }
        },
        "type": "object",
        "required": [
          "key",
          "output_parameter_id",
          "workflow_id",
          "created_at",
          "modified_at"
        ],
        "title": "OutputParameter"
      },
      "OutputParameterYAML": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "output",
            "title": "Parameter Type",
            "default": "output"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "OutputParameterYAML"
      },
      "PDFParserBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "pdf_parser",
            "title": "Block Type",
            "default": "pdf_parser"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "file_url": {
            "type": "string",
            "title": "File Url"
          },
          "json_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Json Schema"
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter",
          "file_url"
        ],
        "title": "PDFParserBlock"
      },
      "PDFParserBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "pdf_parser",
            "title": "Block Type",
            "default": "pdf_parser"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "file_url": {
            "type": "string",
            "title": "File Url"
          },
          "json_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Json Schema"
          }
        },
        "type": "object",
        "required": [
          "label",
          "file_url"
        ],
        "title": "PDFParserBlockYAML"
      },
      "PasswordCredentialResponse": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "description": "The username associated with the credential",
            "examples": [
              "user@example.com"
            ]
          }
        },
        "type": "object",
        "required": [
          "username"
        ],
        "title": "PasswordCredentialResponse",
        "description": "Response model for password credentials, containing only the username."
      },
      "ProxyLocation": {
        "type": "string",
        "enum": [
          "RESIDENTIAL",
          "US-CA",
          "US-NY",
          "US-TX",
          "US-FL",
          "US-WA",
          "RESIDENTIAL_ES",
          "RESIDENTIAL_IE",
          "RESIDENTIAL_GB",
          "RESIDENTIAL_IN",
          "RESIDENTIAL_JP",
          "RESIDENTIAL_FR",
          "RESIDENTIAL_DE",
          "RESIDENTIAL_NZ",
          "RESIDENTIAL_ZA",
          "RESIDENTIAL_AR",
          "RESIDENTIAL_ISP",
          "NONE"
        ],
        "title": "ProxyLocation"
      },
      "RunEngine": {
        "type": "string",
        "enum": [
          "skyvern-1.0",
          "skyvern-2.0",
          "openai-cua",
          "anthropic-cua"
        ],
        "title": "RunEngine"
      },
      "RunStatus": {
        "type": "string",
        "enum": [
          "created",
          "queued",
          "running",
          "timed_out",
          "failed",
          "terminated",
          "completed",
          "canceled"
        ],
        "title": "RunStatus"
      },
      "SendEmailBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "send_email",
            "title": "Block Type",
            "default": "send_email"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "smtp_host": {
            "$ref": "#/components/schemas/AWSSecretParameter"
          },
          "smtp_port": {
            "$ref": "#/components/schemas/AWSSecretParameter"
          },
          "smtp_username": {
            "$ref": "#/components/schemas/AWSSecretParameter"
          },
          "smtp_password": {
            "$ref": "#/components/schemas/AWSSecretParameter"
          },
          "sender": {
            "type": "string",
            "title": "Sender"
          },
          "recipients": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recipients"
          },
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "file_attachments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "File Attachments",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter",
          "smtp_host",
          "smtp_port",
          "smtp_username",
          "smtp_password",
          "sender",
          "recipients",
          "subject",
          "body"
        ],
        "title": "SendEmailBlock"
      },
      "SendEmailBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "send_email",
            "title": "Block Type",
            "default": "send_email"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "smtp_host_secret_parameter_key": {
            "type": "string",
            "title": "Smtp Host Secret Parameter Key"
          },
          "smtp_port_secret_parameter_key": {
            "type": "string",
            "title": "Smtp Port Secret Parameter Key"
          },
          "smtp_username_secret_parameter_key": {
            "type": "string",
            "title": "Smtp Username Secret Parameter Key"
          },
          "smtp_password_secret_parameter_key": {
            "type": "string",
            "title": "Smtp Password Secret Parameter Key"
          },
          "sender": {
            "type": "string",
            "title": "Sender"
          },
          "recipients": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recipients"
          },
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "file_attachments": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Attachments"
          }
        },
        "type": "object",
        "required": [
          "label",
          "smtp_host_secret_parameter_key",
          "smtp_port_secret_parameter_key",
          "smtp_username_secret_parameter_key",
          "smtp_password_secret_parameter_key",
          "sender",
          "recipients",
          "subject",
          "body"
        ],
        "title": "SendEmailBlockYAML"
      },
      "TOTPCode": {
        "properties": {
          "totp_identifier": {
            "type": "string",
            "title": "Totp Identifier",
            "description": "The identifier of the TOTP code. It can be the email address, phone number, or the identifier of the user.",
            "examples": [
              "john.doe@example.com",
              "4155555555",
              "user_123"
            ]
          },
          "task_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Id",
            "description": "The task_id the totp code is for. It can be the task_id of the task that the TOTP code is for.",
            "examples": [
              "task_123456"
            ]
          },
          "workflow_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Id",
            "description": "The workflow ID the TOTP code is for. It can be the workflow ID of the workflow that the TOTP code is for.",
            "examples": [
              "wpid_123456"
            ]
          },
          "workflow_run_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Run Id",
            "description": "The workflow run id that the TOTP code is for. It can be the workflow run id of the workflow run that the TOTP code is for.",
            "examples": [
              "wr_123456"
            ]
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "An optional field. The source of the TOTP code. e.g. email, sms, etc.",
            "examples": [
              "email",
              "sms",
              "app"
            ]
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "The content of the TOTP code. It can be the email content that contains the TOTP code, or the sms message that contains the TOTP code. Skyvern will automatically extract the TOTP code from the content.",
            "examples": [
              "Hello, your verification code is 123456"
            ]
          },
          "expired_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expired At",
            "description": "The timestamp when the TOTP code expires",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          },
          "totp_code_id": {
            "type": "string",
            "title": "Totp Code Id",
            "description": "The skyvern ID of the TOTP code."
          },
          "code": {
            "type": "string",
            "title": "Code",
            "description": "The TOTP code extracted from the content."
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id",
            "description": "The ID of the organization that the TOTP code is for."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "The timestamp when the TOTP code was created."
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At",
            "description": "The timestamp when the TOTP code was modified."
          }
        },
        "type": "object",
        "required": [
          "totp_identifier",
          "content",
          "totp_code_id",
          "code",
          "organization_id",
          "created_at",
          "modified_at"
        ],
        "title": "TOTPCode"
      },
      "TOTPCodeCreate": {
        "properties": {
          "totp_identifier": {
            "type": "string",
            "title": "Totp Identifier",
            "description": "The identifier of the TOTP code. It can be the email address, phone number, or the identifier of the user.",
            "examples": [
              "john.doe@example.com",
              "4155555555",
              "user_123"
            ]
          },
          "task_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Id",
            "description": "The task_id the totp code is for. It can be the task_id of the task that the TOTP code is for.",
            "examples": [
              "task_123456"
            ]
          },
          "workflow_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Id",
            "description": "The workflow ID the TOTP code is for. It can be the workflow ID of the workflow that the TOTP code is for.",
            "examples": [
              "wpid_123456"
            ]
          },
          "workflow_run_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Run Id",
            "description": "The workflow run id that the TOTP code is for. It can be the workflow run id of the workflow run that the TOTP code is for.",
            "examples": [
              "wr_123456"
            ]
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "An optional field. The source of the TOTP code. e.g. email, sms, etc.",
            "examples": [
              "email",
              "sms",
              "app"
            ]
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "The content of the TOTP code. It can be the email content that contains the TOTP code, or the sms message that contains the TOTP code. Skyvern will automatically extract the TOTP code from the content.",
            "examples": [
              "Hello, your verification code is 123456"
            ]
          },
          "expired_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expired At",
            "description": "The timestamp when the TOTP code expires",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          }
        },
        "type": "object",
        "required": [
          "totp_identifier",
          "content"
        ],
        "title": "TOTPCodeCreate"
      },
      "TaskBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "task",
            "title": "Block Type",
            "default": "task"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "task_type": {
            "type": "string",
            "title": "Task Type",
            "default": "general"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "engine": {
            "$ref": "#/components/schemas/RunEngine",
            "default": "skyvern-1.0"
          },
          "complete_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complete Criterion"
          },
          "terminate_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terminate Criterion"
          },
          "navigation_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Navigation Goal"
          },
          "data_extraction_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Extraction Goal"
          },
          "data_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Schema"
          },
          "error_code_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code Mapping"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 0
          },
          "max_steps_per_run": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Steps Per Run"
          },
          "parameters": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowParameter"
                },
                {
                  "$ref": "#/components/schemas/ContextParameter"
                },
                {
                  "$ref": "#/components/schemas/AWSSecretParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenLoginCredentialParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenSensitiveInformationParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenCreditCardDataParameter"
                },
                {
                  "$ref": "#/components/schemas/OutputParameter"
                },
                {
                  "$ref": "#/components/schemas/CredentialParameter"
                }
              ],
              "discriminator": {
                "propertyName": "parameter_type",
                "mapping": {
                  "aws_secret": "#/components/schemas/AWSSecretParameter",
                  "bitwarden_credit_card_data": "#/components/schemas/BitwardenCreditCardDataParameter",
                  "bitwarden_login_credential": "#/components/schemas/BitwardenLoginCredentialParameter",
                  "bitwarden_sensitive_information": "#/components/schemas/BitwardenSensitiveInformationParameter",
                  "context": "#/components/schemas/ContextParameter",
                  "credential": "#/components/schemas/CredentialParameter",
                  "output": "#/components/schemas/OutputParameter",
                  "workflow": "#/components/schemas/WorkflowParameter"
                }
              }
            },
            "type": "array",
            "title": "Parameters",
            "default": []
          },
          "complete_on_download": {
            "type": "boolean",
            "title": "Complete On Download",
            "default": false
          },
          "download_suffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Suffix"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "cache_actions": {
            "type": "boolean",
            "title": "Cache Actions",
            "default": false
          },
          "complete_verification": {
            "type": "boolean",
            "title": "Complete Verification",
            "default": true
          },
          "include_action_history_in_verification": {
            "type": "boolean",
            "title": "Include Action History In Verification",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter"
        ],
        "title": "TaskBlock"
      },
      "TaskBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "task",
            "title": "Block Type",
            "default": "task"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "navigation_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Navigation Goal"
          },
          "data_extraction_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Extraction Goal"
          },
          "data_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Schema"
          },
          "error_code_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code Mapping"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 0
          },
          "max_steps_per_run": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Steps Per Run"
          },
          "parameter_keys": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameter Keys"
          },
          "complete_on_download": {
            "type": "boolean",
            "title": "Complete On Download",
            "default": false
          },
          "download_suffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Suffix"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "cache_actions": {
            "type": "boolean",
            "title": "Cache Actions",
            "default": false
          },
          "complete_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complete Criterion"
          },
          "terminate_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terminate Criterion"
          },
          "complete_verification": {
            "type": "boolean",
            "title": "Complete Verification",
            "default": true
          },
          "include_action_history_in_verification": {
            "type": "boolean",
            "title": "Include Action History In Verification",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label"
        ],
        "title": "TaskBlockYAML"
      },
      "TaskRunRequest": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "The goal or task description for Skyvern to accomplish"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url",
            "description": "The starting URL for the task. If not provided, Skyvern will attempt to determine an appropriate URL"
          },
          "engine": {
            "$ref": "#/components/schemas/RunEngine",
            "description": "The Skyvern engine version to use for this task. The default value is skyvern-2.0.",
            "default": "skyvern-2.0"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "The title for the task"
          },
          "proxy_location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProxyLocation"
              },
              {
                "type": "null"
              }
            ],
            "description": "Geographic Proxy location to route the browser traffic through",
            "default": "RESIDENTIAL"
          },
          "data_extraction_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Extraction Schema",
            "description": "Schema defining what data should be extracted from the webpage"
          },
          "error_code_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code Mapping",
            "description": "Custom mapping of error codes to error messages if Skyvern encounters an error"
          },
          "max_steps": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Steps",
            "description": "Maximum number of steps the task can take before timing out"
          },
          "webhook_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Url",
            "description": "URL to send task status updates to after a run is finished"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier",
            "description": "Identifier for TOTP (Time-based One-Time Password) authentication if codes are being pushed to Skyvern"
          },
          "totp_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Url",
            "description": "URL for TOTP authentication setup if Skyvern should be polling endpoint for 2FA codes"
          },
          "browser_session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Browser Session Id",
            "description": "ID of an existing browser session to reuse, having it continue from the current screen state"
          },
          "publish_workflow": {
            "type": "boolean",
            "title": "Publish Workflow",
            "description": "Whether to publish this task as a reusable workflow. Only available for skyvern-2.0.",
            "default": false
          },
          "include_action_history_in_verification": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Action History In Verification",
            "description": "Whether to include action history when verifying that the task is complete",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRunRequest"
      },
      "TaskRunResponse": {
        "properties": {
          "run_id": {
            "type": "string",
            "title": "Run Id",
            "description": "Unique identifier for this run. Run ID starts with `tsk_` for task runs and `wr_` for workflow runs.",
            "examples": [
              "tsk_123",
              "tsk_v2_123",
              "wr_123"
            ]
          },
          "status": {
            "$ref": "#/components/schemas/RunStatus",
            "description": "Current status of the run",
            "examples": [
              "created",
              "queued",
              "running",
              "timed_out",
              "failed",
              "terminated",
              "completed",
              "canceled"
            ]
          },
          "output": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output",
            "description": "Output data from the run, if any. Format/schema depends on the data extracted by the run."
          },
          "downloaded_files": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FileInfo"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Downloaded Files",
            "description": "List of files downloaded during the run"
          },
          "recording_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recording Url",
            "description": "URL to the recording of the run"
          },
          "screenshot_urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Screenshot Urls",
            "description": "List of last n screenshot URLs in reverse chronological order - the first one the list is the latest screenshot."
          },
          "failure_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failure Reason",
            "description": "Reason for failure if the run failed or terminated"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp when this run was created",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At",
            "description": "Timestamp when this run was last modified",
            "examples": [
              "2025-01-01T00:05:00Z"
            ]
          },
          "app_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Url",
            "description": "URL to the application UI where the run can be viewed",
            "examples": [
              "https://app.skyvern.com/tasks/tsk_123",
              "https://app.skyvern.com/workflows/wpid_123/wr_123"
            ]
          },
          "run_type": {
            "type": "string",
            "enum": [
              "task_v1",
              "task_v2",
              "openai_cua",
              "anthropic_cua"
            ],
            "title": "Run Type",
            "description": "Types of a task run - task_v1, task_v2, openai_cua, anthropic_cua"
          },
          "run_request": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskRunRequest"
              },
              {
                "type": "null"
              }
            ],
            "description": "The original request parameters used to start this task run"
          }
        },
        "type": "object",
        "required": [
          "run_id",
          "status",
          "created_at",
          "modified_at",
          "run_type"
        ],
        "title": "TaskRunResponse"
      },
      "TaskV2Block": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "task_v2",
            "title": "Block Type",
            "default": "task_v2"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "max_iterations": {
            "type": "integer",
            "title": "Max Iterations",
            "default": 10
          },
          "max_steps": {
            "type": "integer",
            "title": "Max Steps",
            "default": 25
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter",
          "prompt"
        ],
        "title": "TaskV2Block"
      },
      "TaskV2BlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "task_v2",
            "title": "Block Type",
            "default": "task_v2"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "max_iterations": {
            "type": "integer",
            "title": "Max Iterations",
            "default": 10
          },
          "max_steps": {
            "type": "integer",
            "title": "Max Steps",
            "default": 25
          }
        },
        "type": "object",
        "required": [
          "label",
          "prompt"
        ],
        "title": "TaskV2BlockYAML"
      },
      "TextPromptBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "text_prompt",
            "title": "Block Type",
            "default": "text_prompt"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "llm_key": {
            "type": "string",
            "title": "Llm Key",
            "default": "AZURE_OPENAI_GPT4_1"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "parameters": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowParameter"
                },
                {
                  "$ref": "#/components/schemas/ContextParameter"
                },
                {
                  "$ref": "#/components/schemas/AWSSecretParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenLoginCredentialParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenSensitiveInformationParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenCreditCardDataParameter"
                },
                {
                  "$ref": "#/components/schemas/OutputParameter"
                },
                {
                  "$ref": "#/components/schemas/CredentialParameter"
                }
              ],
              "discriminator": {
                "propertyName": "parameter_type",
                "mapping": {
                  "aws_secret": "#/components/schemas/AWSSecretParameter",
                  "bitwarden_credit_card_data": "#/components/schemas/BitwardenCreditCardDataParameter",
                  "bitwarden_login_credential": "#/components/schemas/BitwardenLoginCredentialParameter",
                  "bitwarden_sensitive_information": "#/components/schemas/BitwardenSensitiveInformationParameter",
                  "context": "#/components/schemas/ContextParameter",
                  "credential": "#/components/schemas/CredentialParameter",
                  "output": "#/components/schemas/OutputParameter",
                  "workflow": "#/components/schemas/WorkflowParameter"
                }
              }
            },
            "type": "array",
            "title": "Parameters",
            "default": []
          },
          "json_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Json Schema"
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter",
          "prompt"
        ],
        "title": "TextPromptBlock"
      },
      "TextPromptBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "text_prompt",
            "title": "Block Type",
            "default": "text_prompt"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "llm_key": {
            "type": "string",
            "title": "Llm Key",
            "default": "OPENAI_GPT4O_MINI"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "parameter_keys": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameter Keys"
          },
          "json_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Json Schema"
          }
        },
        "type": "object",
        "required": [
          "label",
          "prompt"
        ],
        "title": "TextPromptBlockYAML"
      },
      "UploadToS3Block": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "upload_to_s3",
            "title": "Block Type",
            "default": "upload_to_s3"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter"
        ],
        "title": "UploadToS3Block"
      },
      "UploadToS3BlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "upload_to_s3",
            "title": "Block Type",
            "default": "upload_to_s3"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "label"
        ],
        "title": "UploadToS3BlockYAML"
      },
      "UrlBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "goto_url",
            "title": "Block Type",
            "default": "goto_url"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "task_type": {
            "type": "string",
            "title": "Task Type",
            "default": "general"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "engine": {
            "$ref": "#/components/schemas/RunEngine",
            "default": "skyvern-1.0"
          },
          "complete_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complete Criterion"
          },
          "terminate_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terminate Criterion"
          },
          "navigation_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Navigation Goal"
          },
          "data_extraction_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Extraction Goal"
          },
          "data_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Schema"
          },
          "error_code_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code Mapping"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 0
          },
          "max_steps_per_run": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Steps Per Run"
          },
          "parameters": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowParameter"
                },
                {
                  "$ref": "#/components/schemas/ContextParameter"
                },
                {
                  "$ref": "#/components/schemas/AWSSecretParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenLoginCredentialParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenSensitiveInformationParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenCreditCardDataParameter"
                },
                {
                  "$ref": "#/components/schemas/OutputParameter"
                },
                {
                  "$ref": "#/components/schemas/CredentialParameter"
                }
              ],
              "discriminator": {
                "propertyName": "parameter_type",
                "mapping": {
                  "aws_secret": "#/components/schemas/AWSSecretParameter",
                  "bitwarden_credit_card_data": "#/components/schemas/BitwardenCreditCardDataParameter",
                  "bitwarden_login_credential": "#/components/schemas/BitwardenLoginCredentialParameter",
                  "bitwarden_sensitive_information": "#/components/schemas/BitwardenSensitiveInformationParameter",
                  "context": "#/components/schemas/ContextParameter",
                  "credential": "#/components/schemas/CredentialParameter",
                  "output": "#/components/schemas/OutputParameter",
                  "workflow": "#/components/schemas/WorkflowParameter"
                }
              }
            },
            "type": "array",
            "title": "Parameters",
            "default": []
          },
          "complete_on_download": {
            "type": "boolean",
            "title": "Complete On Download",
            "default": false
          },
          "download_suffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Suffix"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "cache_actions": {
            "type": "boolean",
            "title": "Cache Actions",
            "default": false
          },
          "complete_verification": {
            "type": "boolean",
            "title": "Complete Verification",
            "default": true
          },
          "include_action_history_in_verification": {
            "type": "boolean",
            "title": "Include Action History In Verification",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter",
          "url"
        ],
        "title": "UrlBlock"
      },
      "UrlBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "goto_url",
            "title": "Block Type",
            "default": "goto_url"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "label",
          "url"
        ],
        "title": "UrlBlockYAML"
      },
      "ValidationBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "validation",
            "title": "Block Type",
            "default": "validation"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "task_type": {
            "type": "string",
            "title": "Task Type",
            "default": "general"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "engine": {
            "$ref": "#/components/schemas/RunEngine",
            "default": "skyvern-1.0"
          },
          "complete_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complete Criterion"
          },
          "terminate_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terminate Criterion"
          },
          "navigation_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Navigation Goal"
          },
          "data_extraction_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Extraction Goal"
          },
          "data_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Schema"
          },
          "error_code_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code Mapping"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 0
          },
          "max_steps_per_run": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Steps Per Run"
          },
          "parameters": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowParameter"
                },
                {
                  "$ref": "#/components/schemas/ContextParameter"
                },
                {
                  "$ref": "#/components/schemas/AWSSecretParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenLoginCredentialParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenSensitiveInformationParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenCreditCardDataParameter"
                },
                {
                  "$ref": "#/components/schemas/OutputParameter"
                },
                {
                  "$ref": "#/components/schemas/CredentialParameter"
                }
              ],
              "discriminator": {
                "propertyName": "parameter_type",
                "mapping": {
                  "aws_secret": "#/components/schemas/AWSSecretParameter",
                  "bitwarden_credit_card_data": "#/components/schemas/BitwardenCreditCardDataParameter",
                  "bitwarden_login_credential": "#/components/schemas/BitwardenLoginCredentialParameter",
                  "bitwarden_sensitive_information": "#/components/schemas/BitwardenSensitiveInformationParameter",
                  "context": "#/components/schemas/ContextParameter",
                  "credential": "#/components/schemas/CredentialParameter",
                  "output": "#/components/schemas/OutputParameter",
                  "workflow": "#/components/schemas/WorkflowParameter"
                }
              }
            },
            "type": "array",
            "title": "Parameters",
            "default": []
          },
          "complete_on_download": {
            "type": "boolean",
            "title": "Complete On Download",
            "default": false
          },
          "download_suffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Suffix"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "cache_actions": {
            "type": "boolean",
            "title": "Cache Actions",
            "default": false
          },
          "complete_verification": {
            "type": "boolean",
            "title": "Complete Verification",
            "default": true
          },
          "include_action_history_in_verification": {
            "type": "boolean",
            "title": "Include Action History In Verification",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter"
        ],
        "title": "ValidationBlock"
      },
      "ValidationBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "validation",
            "title": "Block Type",
            "default": "validation"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "complete_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complete Criterion"
          },
          "terminate_criterion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terminate Criterion"
          },
          "error_code_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code Mapping"
          },
          "parameter_keys": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameter Keys"
          }
        },
        "type": "object",
        "required": [
          "label"
        ],
        "title": "ValidationBlockYAML"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WaitBlock": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "block_type": {
            "type": "string",
            "const": "wait",
            "title": "Block Type",
            "default": "wait"
          },
          "output_parameter": {
            "$ref": "#/components/schemas/OutputParameter"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "wait_sec": {
            "type": "integer",
            "title": "Wait Sec"
          },
          "parameters": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowParameter"
                },
                {
                  "$ref": "#/components/schemas/ContextParameter"
                },
                {
                  "$ref": "#/components/schemas/AWSSecretParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenLoginCredentialParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenSensitiveInformationParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenCreditCardDataParameter"
                },
                {
                  "$ref": "#/components/schemas/OutputParameter"
                },
                {
                  "$ref": "#/components/schemas/CredentialParameter"
                }
              ],
              "discriminator": {
                "propertyName": "parameter_type",
                "mapping": {
                  "aws_secret": "#/components/schemas/AWSSecretParameter",
                  "bitwarden_credit_card_data": "#/components/schemas/BitwardenCreditCardDataParameter",
                  "bitwarden_login_credential": "#/components/schemas/BitwardenLoginCredentialParameter",
                  "bitwarden_sensitive_information": "#/components/schemas/BitwardenSensitiveInformationParameter",
                  "context": "#/components/schemas/ContextParameter",
                  "credential": "#/components/schemas/CredentialParameter",
                  "output": "#/components/schemas/OutputParameter",
                  "workflow": "#/components/schemas/WorkflowParameter"
                }
              }
            },
            "type": "array",
            "title": "Parameters",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "label",
          "output_parameter",
          "wait_sec"
        ],
        "title": "WaitBlock"
      },
      "WaitBlockYAML": {
        "properties": {
          "block_type": {
            "type": "string",
            "const": "wait",
            "title": "Block Type",
            "default": "wait"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "continue_on_failure": {
            "type": "boolean",
            "title": "Continue On Failure",
            "default": false
          },
          "wait_sec": {
            "type": "integer",
            "title": "Wait Sec",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "label"
        ],
        "title": "WaitBlockYAML"
      },
      "Workflow": {
        "properties": {
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "workflow_permanent_id": {
            "type": "string",
            "title": "Workflow Permanent Id"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "is_saved_task": {
            "type": "boolean",
            "title": "Is Saved Task"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "workflow_definition": {
            "$ref": "#/components/schemas/WorkflowDefinition"
          },
          "proxy_location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProxyLocation"
              },
              {
                "type": "null"
              }
            ]
          },
          "webhook_callback_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Callback Url"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "persist_browser_session": {
            "type": "boolean",
            "title": "Persist Browser Session",
            "default": false
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "default": "published"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          }
        },
        "type": "object",
        "required": [
          "workflow_id",
          "organization_id",
          "title",
          "workflow_permanent_id",
          "version",
          "is_saved_task",
          "workflow_definition",
          "created_at",
          "modified_at"
        ],
        "title": "Workflow"
      },
      "WorkflowCreateYAMLRequest": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "proxy_location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProxyLocation"
              },
              {
                "type": "null"
              }
            ]
          },
          "webhook_callback_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Callback Url"
          },
          "totp_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Verification Url"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier"
          },
          "persist_browser_session": {
            "type": "boolean",
            "title": "Persist Browser Session",
            "default": false
          },
          "workflow_definition": {
            "$ref": "#/components/schemas/WorkflowDefinitionYAML"
          },
          "is_saved_task": {
            "type": "boolean",
            "title": "Is Saved Task",
            "default": false
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "default": "published"
          }
        },
        "type": "object",
        "required": [
          "title",
          "workflow_definition"
        ],
        "title": "WorkflowCreateYAMLRequest"
      },
      "WorkflowDefinition": {
        "properties": {
          "parameters": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowParameter"
                },
                {
                  "$ref": "#/components/schemas/ContextParameter"
                },
                {
                  "$ref": "#/components/schemas/AWSSecretParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenLoginCredentialParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenSensitiveInformationParameter"
                },
                {
                  "$ref": "#/components/schemas/BitwardenCreditCardDataParameter"
                },
                {
                  "$ref": "#/components/schemas/OutputParameter"
                },
                {
                  "$ref": "#/components/schemas/CredentialParameter"
                }
              ],
              "discriminator": {
                "propertyName": "parameter_type",
                "mapping": {
                  "aws_secret": "#/components/schemas/AWSSecretParameter",
                  "bitwarden_credit_card_data": "#/components/schemas/BitwardenCreditCardDataParameter",
                  "bitwarden_login_credential": "#/components/schemas/BitwardenLoginCredentialParameter",
                  "bitwarden_sensitive_information": "#/components/schemas/BitwardenSensitiveInformationParameter",
                  "context": "#/components/schemas/ContextParameter",
                  "credential": "#/components/schemas/CredentialParameter",
                  "output": "#/components/schemas/OutputParameter",
                  "workflow": "#/components/schemas/WorkflowParameter"
                }
              }
            },
            "type": "array",
            "title": "Parameters"
          },
          "blocks": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ForLoopBlock"
                },
                {
                  "$ref": "#/components/schemas/TaskBlock"
                },
                {
                  "$ref": "#/components/schemas/CodeBlock"
                },
                {
                  "$ref": "#/components/schemas/TextPromptBlock"
                },
                {
                  "$ref": "#/components/schemas/DownloadToS3Block"
                },
                {
                  "$ref": "#/components/schemas/UploadToS3Block"
                },
                {
                  "$ref": "#/components/schemas/SendEmailBlock"
                },
                {
                  "$ref": "#/components/schemas/FileParserBlock"
                },
                {
                  "$ref": "#/components/schemas/PDFParserBlock"
                },
                {
                  "$ref": "#/components/schemas/ValidationBlock"
                },
                {
                  "$ref": "#/components/schemas/ActionBlock"
                },
                {
                  "$ref": "#/components/schemas/NavigationBlock"
                },
                {
                  "$ref": "#/components/schemas/ExtractionBlock"
                },
                {
                  "$ref": "#/components/schemas/LoginBlock"
                },
                {
                  "$ref": "#/components/schemas/WaitBlock"
                },
                {
                  "$ref": "#/components/schemas/FileDownloadBlock"
                },
                {
                  "$ref": "#/components/schemas/UrlBlock"
                },
                {
                  "$ref": "#/components/schemas/TaskV2Block"
                },
                {
                  "$ref": "#/components/schemas/FileUploadBlock"
                }
              ],
              "discriminator": {
                "propertyName": "block_type",
                "mapping": {
                  "action": "#/components/schemas/ActionBlock",
                  "code": "#/components/schemas/CodeBlock",
                  "download_to_s3": "#/components/schemas/DownloadToS3Block",
                  "extraction": "#/components/schemas/ExtractionBlock",
                  "file_download": "#/components/schemas/FileDownloadBlock",
                  "file_upload": "#/components/schemas/FileUploadBlock",
                  "file_url_parser": "#/components/schemas/FileParserBlock",
                  "for_loop": "#/components/schemas/ForLoopBlock",
                  "goto_url": "#/components/schemas/UrlBlock",
                  "login": "#/components/schemas/LoginBlock",
                  "navigation": "#/components/schemas/NavigationBlock",
                  "pdf_parser": "#/components/schemas/PDFParserBlock",
                  "send_email": "#/components/schemas/SendEmailBlock",
                  "task": "#/components/schemas/TaskBlock",
                  "task_v2": "#/components/schemas/TaskV2Block",
                  "text_prompt": "#/components/schemas/TextPromptBlock",
                  "upload_to_s3": "#/components/schemas/UploadToS3Block",
                  "validation": "#/components/schemas/ValidationBlock",
                  "wait": "#/components/schemas/WaitBlock"
                }
              }
            },
            "type": "array",
            "title": "Blocks"
          }
        },
        "type": "object",
        "required": [
          "parameters",
          "blocks"
        ],
        "title": "WorkflowDefinition"
      },
      "WorkflowDefinitionYAML": {
        "properties": {
          "parameters": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AWSSecretParameterYAML"
                },
                {
                  "$ref": "#/components/schemas/BitwardenLoginCredentialParameterYAML"
                },
                {
                  "$ref": "#/components/schemas/BitwardenSensitiveInformationParameterYAML"
                },
                {
                  "$ref": "#/components/schemas/BitwardenCreditCardDataParameterYAML"
                },
                {
                  "$ref": "#/components/schemas/WorkflowParameterYAML"
                },
                {
                  "$ref": "#/components/schemas/ContextParameterYAML"
                },
                {
                  "$ref": "#/components/schemas/OutputParameterYAML"
                },
                {
                  "$ref": "#/components/schemas/CredentialParameterYAML"
                }
              ],
              "discriminator": {
                "propertyName": "parameter_type",
                "mapping": {
                  "aws_secret": "#/components/schemas/AWSSecretParameterYAML",
                  "bitwarden_credit_card_data": "#/components/schemas/BitwardenCreditCardDataParameterYAML",
                  "bitwarden_login_credential": "#/components/schemas/BitwardenLoginCredentialParameterYAML",
                  "bitwarden_sensitive_information": "#/components/schemas/BitwardenSensitiveInformationParameterYAML",
                  "context": "#/components/schemas/ContextParameterYAML",
                  "credential": "#/components/schemas/CredentialParameterYAML",
                  "output": "#/components/schemas/OutputParameterYAML",
                  "workflow": "#/components/schemas/WorkflowParameterYAML"
                }
              }
            },
            "type": "array",
            "title": "Parameters"
          },
          "blocks": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TaskBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/ForLoopBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/CodeBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/TextPromptBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/DownloadToS3BlockYAML"
                },
                {
                  "$ref": "#/components/schemas/UploadToS3BlockYAML"
                },
                {
                  "$ref": "#/components/schemas/FileUploadBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/SendEmailBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/FileParserBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/ValidationBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/ActionBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/NavigationBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/ExtractionBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/LoginBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/WaitBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/FileDownloadBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/UrlBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/PDFParserBlockYAML"
                },
                {
                  "$ref": "#/components/schemas/TaskV2BlockYAML"
                }
              ],
              "discriminator": {
                "propertyName": "block_type",
                "mapping": {
                  "action": "#/components/schemas/ActionBlockYAML",
                  "code": "#/components/schemas/CodeBlockYAML",
                  "download_to_s3": "#/components/schemas/DownloadToS3BlockYAML",
                  "extraction": "#/components/schemas/ExtractionBlockYAML",
                  "file_download": "#/components/schemas/FileDownloadBlockYAML",
                  "file_upload": "#/components/schemas/FileUploadBlockYAML",
                  "file_url_parser": "#/components/schemas/FileParserBlockYAML",
                  "for_loop": "#/components/schemas/ForLoopBlockYAML",
                  "goto_url": "#/components/schemas/UrlBlockYAML",
                  "login": "#/components/schemas/LoginBlockYAML",
                  "navigation": "#/components/schemas/NavigationBlockYAML",
                  "pdf_parser": "#/components/schemas/PDFParserBlockYAML",
                  "send_email": "#/components/schemas/SendEmailBlockYAML",
                  "task": "#/components/schemas/TaskBlockYAML",
                  "task_v2": "#/components/schemas/TaskV2BlockYAML",
                  "text_prompt": "#/components/schemas/TextPromptBlockYAML",
                  "upload_to_s3": "#/components/schemas/UploadToS3BlockYAML",
                  "validation": "#/components/schemas/ValidationBlockYAML",
                  "wait": "#/components/schemas/WaitBlockYAML"
                }
              }
            },
            "type": "array",
            "title": "Blocks"
          }
        },
        "type": "object",
        "required": [
          "parameters",
          "blocks"
        ],
        "title": "WorkflowDefinitionYAML"
      },
      "WorkflowParameter": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "workflow",
            "title": "Parameter Type",
            "default": "workflow"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "workflow_parameter_id": {
            "type": "string",
            "title": "Workflow Parameter Id"
          },
          "workflow_parameter_type": {
            "$ref": "#/components/schemas/WorkflowParameterType"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "default_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              },
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Value"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          }
        },
        "type": "object",
        "required": [
          "key",
          "workflow_parameter_id",
          "workflow_parameter_type",
          "workflow_id",
          "created_at",
          "modified_at"
        ],
        "title": "WorkflowParameter"
      },
      "WorkflowParameterType": {
        "type": "string",
        "enum": [
          "string",
          "integer",
          "float",
          "boolean",
          "json",
          "file_url",
          "credential_id"
        ],
        "title": "WorkflowParameterType"
      },
      "WorkflowParameterYAML": {
        "properties": {
          "parameter_type": {
            "type": "string",
            "const": "workflow",
            "title": "Parameter Type",
            "default": "workflow"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "workflow_parameter_type": {
            "$ref": "#/components/schemas/WorkflowParameterType"
          },
          "default_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              },
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Value"
          }
        },
        "type": "object",
        "required": [
          "key",
          "workflow_parameter_type"
        ],
        "title": "WorkflowParameterYAML"
      },
      "WorkflowRequest": {
        "properties": {
          "json_definition": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowCreateYAMLRequest"
              },
              {
                "type": "null"
              }
            ],
            "description": "Workflow definition in JSON format"
          },
          "yaml_definition": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Yaml Definition",
            "description": "Workflow definition in YAML format"
          }
        },
        "type": "object",
        "title": "WorkflowRequest"
      },
      "WorkflowRunRequest": {
        "properties": {
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id",
            "description": "ID of the workflow to run. Workflow ID starts with `wpid_`.",
            "examples": [
              "wpid_123"
            ]
          },
          "parameters": {
            "additionalProperties": true,
            "type": "object",
            "title": "Parameters",
            "description": "Parameters to pass to the workflow",
            "default": {

            }
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "The title for this workflow run"
          },
          "proxy_location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProxyLocation"
              },
              {
                "type": "null"
              }
            ],
            "description": "Location of proxy to use for this workflow run",
            "default": "RESIDENTIAL"
          },
          "webhook_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Url",
            "description": "URL to send workflow status updates to after a run is finished. Refer to https://docs.skyvern.com/running-tasks/webhooks-faq for webhook questions."
          },
          "totp_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Url",
            "description": "URL that serves TOTP/2FA/MFA codes for Skyvern to use during the workflow run. Refer to https://docs.skyvern.com/running-tasks/advanced-features#get-code-from-your-endpoint"
          },
          "totp_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Identifier",
            "description": "Identifier for the TOTP/2FA/MFA code when the code is pushed to Skyvern. Refer to https://docs.skyvern.com/running-tasks/advanced-features#time-based-one-time-password-totp"
          },
          "browser_session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Browser Session Id",
            "description": "ID of a Skyvern browser session to reuse, having it continue from the current screen state"
          }
        },
        "type": "object",
        "required": [
          "workflow_id"
        ],
        "title": "WorkflowRunRequest"
      },
      "WorkflowRunResponse": {
        "properties": {
          "run_id": {
            "type": "string",
            "title": "Run Id",
            "description": "Unique identifier for this run. Run ID starts with `tsk_` for task runs and `wr_` for workflow runs.",
            "examples": [
              "tsk_123",
              "tsk_v2_123",
              "wr_123"
            ]
          },
          "status": {
            "$ref": "#/components/schemas/RunStatus",
            "description": "Current status of the run",
            "examples": [
              "created",
              "queued",
              "running",
              "timed_out",
              "failed",
              "terminated",
              "completed",
              "canceled"
            ]
          },
          "output": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output",
            "description": "Output data from the run, if any. Format/schema depends on the data extracted by the run."
          },
          "downloaded_files": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FileInfo"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Downloaded Files",
            "description": "List of files downloaded during the run"
          },
          "recording_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recording Url",
            "description": "URL to the recording of the run"
          },
          "screenshot_urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Screenshot Urls",
            "description": "List of last n screenshot URLs in reverse chronological order - the first one the list is the latest screenshot."
          },
          "failure_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failure Reason",
            "description": "Reason for failure if the run failed or terminated"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp when this run was created",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At",
            "description": "Timestamp when this run was last modified",
            "examples": [
              "2025-01-01T00:05:00Z"
            ]
          },
          "app_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Url",
            "description": "URL to the application UI where the run can be viewed",
            "examples": [
              "https://app.skyvern.com/tasks/tsk_123",
              "https://app.skyvern.com/workflows/wpid_123/wr_123"
            ]
          },
          "run_type": {
            "type": "string",
            "const": "workflow_run",
            "title": "Run Type",
            "description": "Type of run - always workflow_run for workflow runs"
          },
          "run_request": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowRunRequest"
              },
              {
                "type": "null"
              }
            ],
            "description": "The original request parameters used to start this workflow run"
          }
        },
        "type": "object",
        "required": [
          "run_id",
          "status",
          "created_at",
          "modified_at",
          "run_type"
        ],
        "title": "WorkflowRunResponse"
      },
      "WorkflowStatus": {
        "type": "string",
        "enum": [
          "published",
          "draft",
          "auto_generated"
        ],
        "title": "WorkflowStatus"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.skyvern.com",
      "x-fern-server-name": "Production"
    },
    {
      "url": "https://api-staging.skyvern.com",
      "x-fern-server-name": "Staging"
    },
    {
      "url": "http://localhost:8000",
      "x-fern-server-name": "Development"
    }
  ]
}