// This file was auto-generated by Fern from our API Definition.
import * as core from "../../core/index.mjs";
import * as serializers from "../index.mjs";
import { ActionBlockYaml } from "./ActionBlockYaml.mjs";
import { CodeBlockYaml } from "./CodeBlockYaml.mjs";
import { DownloadToS3BlockYaml } from "./DownloadToS3BlockYaml.mjs";
import { ExtractionBlockYaml } from "./ExtractionBlockYaml.mjs";
import { FileDownloadBlockYaml } from "./FileDownloadBlockYaml.mjs";
import { FileParserBlockYaml } from "./FileParserBlockYaml.mjs";
import { FileUploadBlockYaml } from "./FileUploadBlockYaml.mjs";
import { HttpRequestBlockYaml } from "./HttpRequestBlockYaml.mjs";
import { LoginBlockYaml } from "./LoginBlockYaml.mjs";
import { NavigationBlockYaml } from "./NavigationBlockYaml.mjs";
import { PdfParserBlockYaml } from "./PdfParserBlockYaml.mjs";
import { SendEmailBlockYaml } from "./SendEmailBlockYaml.mjs";
import { TaskBlockYaml } from "./TaskBlockYaml.mjs";
import { TaskV2BlockYaml } from "./TaskV2BlockYaml.mjs";
import { TextPromptBlockYaml } from "./TextPromptBlockYaml.mjs";
import { UploadToS3BlockYaml } from "./UploadToS3BlockYaml.mjs";
import { UrlBlockYaml } from "./UrlBlockYaml.mjs";
import { ValidationBlockYaml } from "./ValidationBlockYaml.mjs";
import { WaitBlockYaml } from "./WaitBlockYaml.mjs";
export const WorkflowDefinitionYamlBlocksItem = core.serialization
    .union(core.serialization.discriminant("blockType", "block_type"), {
    action: ActionBlockYaml,
    code: CodeBlockYaml,
    download_to_s3: DownloadToS3BlockYaml,
    extraction: ExtractionBlockYaml,
    file_download: FileDownloadBlockYaml,
    file_upload: FileUploadBlockYaml,
    file_url_parser: FileParserBlockYaml,
    for_loop: core.serialization.lazyObject(() => serializers.ForLoopBlockYaml),
    goto_url: UrlBlockYaml,
    http_request: HttpRequestBlockYaml,
    login: LoginBlockYaml,
    navigation: NavigationBlockYaml,
    pdf_parser: PdfParserBlockYaml,
    send_email: SendEmailBlockYaml,
    task: TaskBlockYaml,
    task_v2: TaskV2BlockYaml,
    text_prompt: TextPromptBlockYaml,
    upload_to_s3: UploadToS3BlockYaml,
    validation: ValidationBlockYaml,
    wait: WaitBlockYaml,
})
    .transform({
    transform: (value) => value,
    untransform: (value) => value,
});
