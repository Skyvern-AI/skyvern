"use strict";
// This file was auto-generated by Fern from our API Definition.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileUploadBlock = void 0;
const core = __importStar(require("../../core/index.js"));
const FileStorageType_js_1 = require("./FileStorageType.js");
const OutputParameter_js_1 = require("./OutputParameter.js");
exports.FileUploadBlock = core.serialization.object({
    label: core.serialization.string(),
    outputParameter: core.serialization.property("output_parameter", OutputParameter_js_1.OutputParameter),
    continueOnFailure: core.serialization.property("continue_on_failure", core.serialization.boolean().optional()),
    model: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    disableCache: core.serialization.property("disable_cache", core.serialization.boolean().optional()),
    storageType: core.serialization.property("storage_type", FileStorageType_js_1.FileStorageType.optional()),
    s3Bucket: core.serialization.property("s3_bucket", core.serialization.string().optional()),
    awsAccessKeyId: core.serialization.property("aws_access_key_id", core.serialization.string().optional()),
    awsSecretAccessKey: core.serialization.property("aws_secret_access_key", core.serialization.string().optional()),
    regionName: core.serialization.property("region_name", core.serialization.string().optional()),
    azureStorageAccountName: core.serialization.property("azure_storage_account_name", core.serialization.string().optional()),
    azureStorageAccountKey: core.serialization.property("azure_storage_account_key", core.serialization.string().optional()),
    azureBlobContainerName: core.serialization.property("azure_blob_container_name", core.serialization.string().optional()),
    path: core.serialization.string().optional(),
});
