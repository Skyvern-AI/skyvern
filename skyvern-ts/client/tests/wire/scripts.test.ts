// This file was auto-generated by Fern from our API Definition.

import * as Skyvern from "../../src/api/index";
import { SkyvernClient } from "../../src/Client";
import { mockServerPool } from "../mock-server/MockServerPool";

describe("Scripts", () => {
    test("runScript (1)", async () => {
        const server = mockServerPool.createServer();
        const client = new SkyvernClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = { key: "value" };
        server
            .mockEndpoint()
            .post("/v1/scripts/s_abc123/run")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.scripts.runScript("s_abc123");
        expect(response).toEqual({
            key: "value",
        });
    });

    test("runScript (2)", async () => {
        const server = mockServerPool.createServer();
        const client = new SkyvernClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = { key: "value" };
        server
            .mockEndpoint()
            .post("/v1/scripts/script_id/run")
            .respondWith()
            .statusCode(422)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.scripts.runScript("script_id");
        }).rejects.toThrow(Skyvern.UnprocessableEntityError);
    });
});
