"use strict";
// This file was auto-generated by Fern from our API Definition.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkflowRunBlock = void 0;
const core = __importStar(require("../../core/index.js"));
const Action_js_1 = require("./Action.js");
const BlockType_js_1 = require("./BlockType.js");
const RunEngine_js_1 = require("./RunEngine.js");
const WorkflowRunBlockDataSchema_js_1 = require("./WorkflowRunBlockDataSchema.js");
const WorkflowRunBlockNavigationPayload_js_1 = require("./WorkflowRunBlockNavigationPayload.js");
const WorkflowRunBlockOutput_js_1 = require("./WorkflowRunBlockOutput.js");
exports.WorkflowRunBlock = core.serialization.object({
    workflowRunBlockId: core.serialization.property("workflow_run_block_id", core.serialization.string()),
    blockWorkflowRunId: core.serialization.property("block_workflow_run_id", core.serialization.string().optional()),
    workflowRunId: core.serialization.property("workflow_run_id", core.serialization.string()),
    organizationId: core.serialization.property("organization_id", core.serialization.string()),
    description: core.serialization.string().optional(),
    parentWorkflowRunBlockId: core.serialization.property("parent_workflow_run_block_id", core.serialization.string().optional()),
    blockType: core.serialization.property("block_type", BlockType_js_1.BlockType),
    label: core.serialization.string().optional(),
    status: core.serialization.string().optional(),
    output: WorkflowRunBlockOutput_js_1.WorkflowRunBlockOutput.optional(),
    continueOnFailure: core.serialization.property("continue_on_failure", core.serialization.boolean().optional()),
    failureReason: core.serialization.property("failure_reason", core.serialization.string().optional()),
    engine: RunEngine_js_1.RunEngine.optional(),
    taskId: core.serialization.property("task_id", core.serialization.string().optional()),
    url: core.serialization.string().optional(),
    navigationGoal: core.serialization.property("navigation_goal", core.serialization.string().optional()),
    navigationPayload: core.serialization.property("navigation_payload", WorkflowRunBlockNavigationPayload_js_1.WorkflowRunBlockNavigationPayload.optional()),
    dataExtractionGoal: core.serialization.property("data_extraction_goal", core.serialization.string().optional()),
    dataSchema: core.serialization.property("data_schema", WorkflowRunBlockDataSchema_js_1.WorkflowRunBlockDataSchema.optional()),
    terminateCriterion: core.serialization.property("terminate_criterion", core.serialization.string().optional()),
    completeCriterion: core.serialization.property("complete_criterion", core.serialization.string().optional()),
    actions: core.serialization.list(Action_js_1.Action).optional(),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date()),
    includeActionHistoryInVerification: core.serialization.property("include_action_history_in_verification", core.serialization.boolean().optional()),
    duration: core.serialization.number().optional(),
    loopValues: core.serialization.property("loop_values", core.serialization.list(core.serialization.unknown()).optional()),
    currentValue: core.serialization.property("current_value", core.serialization.string().optional()),
    currentIndex: core.serialization.property("current_index", core.serialization.number().optional()),
    recipients: core.serialization.list(core.serialization.string()).optional(),
    attachments: core.serialization.list(core.serialization.string()).optional(),
    subject: core.serialization.string().optional(),
    body: core.serialization.string().optional(),
});
