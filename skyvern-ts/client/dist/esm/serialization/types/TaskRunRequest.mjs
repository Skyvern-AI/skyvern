// This file was auto-generated by Fern from our API Definition.
import * as core from "../../core/index.mjs";
import { ProxyLocation } from "./ProxyLocation.mjs";
import { RunEngine } from "./RunEngine.mjs";
import { TaskRunRequestDataExtractionSchema } from "./TaskRunRequestDataExtractionSchema.mjs";
export const TaskRunRequest = core.serialization.object({
    prompt: core.serialization.string(),
    url: core.serialization.string().optional(),
    engine: RunEngine.optional(),
    title: core.serialization.string().optional(),
    proxyLocation: core.serialization.property("proxy_location", ProxyLocation.optional()),
    dataExtractionSchema: core.serialization.property("data_extraction_schema", TaskRunRequestDataExtractionSchema.optional()),
    errorCodeMapping: core.serialization.property("error_code_mapping", core.serialization.record(core.serialization.string(), core.serialization.string().optional()).optional()),
    maxSteps: core.serialization.property("max_steps", core.serialization.number().optional()),
    webhookUrl: core.serialization.property("webhook_url", core.serialization.string().optional()),
    totpIdentifier: core.serialization.property("totp_identifier", core.serialization.string().optional()),
    totpUrl: core.serialization.property("totp_url", core.serialization.string().optional()),
    browserSessionId: core.serialization.property("browser_session_id", core.serialization.string().optional()),
    model: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    extraHttpHeaders: core.serialization.property("extra_http_headers", core.serialization.record(core.serialization.string(), core.serialization.string().optional()).optional()),
    publishWorkflow: core.serialization.property("publish_workflow", core.serialization.boolean().optional()),
    includeActionHistoryInVerification: core.serialization.property("include_action_history_in_verification", core.serialization.boolean().optional()),
    maxScreenshotScrolls: core.serialization.property("max_screenshot_scrolls", core.serialization.number().optional()),
    browserAddress: core.serialization.property("browser_address", core.serialization.string().optional()),
});
