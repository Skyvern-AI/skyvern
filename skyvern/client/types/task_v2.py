# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .task_v2status import TaskV2Status
import typing
from .output import Output
from .proxy_location import ProxyLocation
from .task_v2extracted_information_schema import TaskV2ExtractedInformationSchema
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class TaskV2(UniversalBaseModel):
    task_id: str
    status: TaskV2Status
    organization_id: typing.Optional[str] = None
    workflow_run_id: typing.Optional[str] = None
    workflow_id: typing.Optional[str] = None
    workflow_permanent_id: typing.Optional[str] = None
    prompt: typing.Optional[str] = None
    url: typing.Optional[str] = None
    summary: typing.Optional[str] = None
    output: typing.Optional[Output] = None
    totp_verification_url: typing.Optional[str] = None
    totp_identifier: typing.Optional[str] = None
    proxy_location: typing.Optional[ProxyLocation] = None
    webhook_callback_url: typing.Optional[str] = None
    extracted_information_schema: typing.Optional[TaskV2ExtractedInformationSchema] = None
    error_code_mapping: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    created_at: dt.datetime
    modified_at: dt.datetime

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
