"use strict";
// This file was auto-generated by Fern from our API Definition.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Action = void 0;
const core = __importStar(require("../../core/index.js"));
const ActionStatus_js_1 = require("./ActionStatus.js");
const ActionType_js_1 = require("./ActionType.js");
const InputOrSelectContext_js_1 = require("./InputOrSelectContext.js");
const SelectOption_js_1 = require("./SelectOption.js");
const UserDefinedError_js_1 = require("./UserDefinedError.js");
exports.Action = core.serialization.object({
    actionType: core.serialization.property("action_type", ActionType_js_1.ActionType),
    status: ActionStatus_js_1.ActionStatus.optional(),
    actionId: core.serialization.property("action_id", core.serialization.string().optional()),
    sourceActionId: core.serialization.property("source_action_id", core.serialization.string().optional()),
    organizationId: core.serialization.property("organization_id", core.serialization.string().optional()),
    workflowRunId: core.serialization.property("workflow_run_id", core.serialization.string().optional()),
    taskId: core.serialization.property("task_id", core.serialization.string().optional()),
    stepId: core.serialization.property("step_id", core.serialization.string().optional()),
    stepOrder: core.serialization.property("step_order", core.serialization.number().optional()),
    actionOrder: core.serialization.property("action_order", core.serialization.number().optional()),
    confidenceFloat: core.serialization.property("confidence_float", core.serialization.number().optional()),
    description: core.serialization.string().optional(),
    reasoning: core.serialization.string().optional(),
    intention: core.serialization.string().optional(),
    response: core.serialization.string().optional(),
    elementId: core.serialization.property("element_id", core.serialization.string().optional()),
    skyvernElementHash: core.serialization.property("skyvern_element_hash", core.serialization.string().optional()),
    skyvernElementData: core.serialization.property("skyvern_element_data", core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()),
    toolCallId: core.serialization.property("tool_call_id", core.serialization.string().optional()),
    xpath: core.serialization.string().optional(),
    errors: core.serialization.list(UserDefinedError_js_1.UserDefinedError).optional(),
    dataExtractionGoal: core.serialization.property("data_extraction_goal", core.serialization.string().optional()),
    fileName: core.serialization.property("file_name", core.serialization.string().optional()),
    fileUrl: core.serialization.property("file_url", core.serialization.string().optional()),
    download: core.serialization.boolean().optional(),
    isUploadFileTag: core.serialization.property("is_upload_file_tag", core.serialization.boolean().optional()),
    text: core.serialization.string().optional(),
    inputOrSelectContext: core.serialization.property("input_or_select_context", InputOrSelectContext_js_1.InputOrSelectContext.optional()),
    option: SelectOption_js_1.SelectOption.optional(),
    isChecked: core.serialization.property("is_checked", core.serialization.boolean().optional()),
    verified: core.serialization.boolean().optional(),
    totpTimingInfo: core.serialization.property("totp_timing_info", core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
    createdBy: core.serialization.property("created_by", core.serialization.string().optional()),
});
