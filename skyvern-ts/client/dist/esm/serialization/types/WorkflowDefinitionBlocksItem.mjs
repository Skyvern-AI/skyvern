// This file was auto-generated by Fern from our API Definition.
import * as core from "../../core/index.mjs";
import * as serializers from "../index.mjs";
import { ActionBlock } from "./ActionBlock.mjs";
import { CodeBlock } from "./CodeBlock.mjs";
import { DownloadToS3Block } from "./DownloadToS3Block.mjs";
import { ExtractionBlock } from "./ExtractionBlock.mjs";
import { FileDownloadBlock } from "./FileDownloadBlock.mjs";
import { FileParserBlock } from "./FileParserBlock.mjs";
import { FileUploadBlock } from "./FileUploadBlock.mjs";
import { HttpRequestBlock } from "./HttpRequestBlock.mjs";
import { LoginBlock } from "./LoginBlock.mjs";
import { NavigationBlock } from "./NavigationBlock.mjs";
import { PdfParserBlock } from "./PdfParserBlock.mjs";
import { SendEmailBlock } from "./SendEmailBlock.mjs";
import { TaskBlock } from "./TaskBlock.mjs";
import { TaskV2Block } from "./TaskV2Block.mjs";
import { TextPromptBlock } from "./TextPromptBlock.mjs";
import { UploadToS3Block } from "./UploadToS3Block.mjs";
import { UrlBlock } from "./UrlBlock.mjs";
import { ValidationBlock } from "./ValidationBlock.mjs";
import { WaitBlock } from "./WaitBlock.mjs";
export const WorkflowDefinitionBlocksItem = core.serialization
    .union(core.serialization.discriminant("blockType", "block_type"), {
    action: ActionBlock,
    code: CodeBlock,
    download_to_s3: DownloadToS3Block,
    extraction: ExtractionBlock,
    file_download: FileDownloadBlock,
    file_upload: FileUploadBlock,
    file_url_parser: FileParserBlock,
    for_loop: core.serialization.lazyObject(() => serializers.ForLoopBlock),
    goto_url: UrlBlock,
    http_request: HttpRequestBlock,
    login: LoginBlock,
    navigation: NavigationBlock,
    pdf_parser: PdfParserBlock,
    send_email: SendEmailBlock,
    task: TaskBlock,
    task_v2: TaskV2Block,
    text_prompt: TextPromptBlock,
    upload_to_s3: UploadToS3Block,
    validation: ValidationBlock,
    wait: WaitBlock,
})
    .transform({
    transform: (value) => value,
    untransform: (value) => value,
});
