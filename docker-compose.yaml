services:
  postgres:
    image: postgres:14-alpine
    restart: always
    # comment out if you want to externally connect DB
    # ports:
    #   - 5432:5432
    volumes:
      # Using a named volume for persistent database storage on the server
      - postgres-data:/var/lib/postgresql/data
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=skyvern
      - POSTGRES_PASSWORD=skyvern
      - POSTGRES_DB=skyvern
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U skyvern"]
      interval: 5s
      timeout: 5s
      retries: 5

  skyvern:
    image: public.ecr.aws/skyvern/skyvern:latest
    restart: on-failure
    # env_file is removed to manage variables in the Coolify UI.
    ports:
      # Includes default values. Coolify UI variables will override these.
      - "${SKYVERN_HOST_PORT:-8001}:8000"
      - "${CDP_HOST_PORT:-9222}:9222"
    volumes:
      # Using named volumes for persistent artifact/log storage
      - artifacts-data:/data/artifacts
      - videos-data:/data/videos
      - har-data:/data/har
      - log-data:/data/log
      - streamlit-data:/app/.streamlit
      # Uncomment the following two lines if you want to connect to any local changes
      # - ./skyvern:/app/skyvern
      # - ./alembic:/app/alembic
    environment:
      - DATABASE_STRING=postgresql+psycopg://skyvern:skyvern@postgres:5432/skyvern
      - BROWSER_TYPE=chromium-headful
      - ENABLE_CODE_BLOCK=true
      # - BROWSER_TYPE=cdp-connect
      # Use this command to start Chrome with remote debugging:
      # "C:\Program Files\Google\Chrome\Application\chrome.exe" --remote-debugging-port=9222 --user-data-dir="C:\chrome-cdp-profile" --no-first-run --no-default-browser-check
      # /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --remote-debugging-port=9222 --user-data-dir="/Users/yourusername/chrome-cdp-profile" --no-first-run --no-default-browser-check
      # - BROWSER_REMOTE_DEBUGGING_URL=http://host.docker.internal:9222/
      # =========================
      #       LLM Settings - Recommended to use skyvern CLI, `skyvern init llm` to setup your LLM's
      # =========================
      # OpenAI Support:
      - ENABLE_OPENAI=true
      - LLM_KEY=OPENAI_GPT4O
      - OPENAI_API_KEY=<span class="math-inline">\{OPENAI\_API\_KEY\} \# Set this secret in the Coolify UI
\# Gemini Support\:
\# To use, uncomment and set the GEMINI\_API\_KEY in the Coolify UI\.
\# \- LLM\_KEY\=GEMINI
\# \- ENABLE\_GEMINI\=true
\# \- GEMINI\_API\_KEY\=</span>{GEMINI_API_KEY}
      # - LLM_KEY=GEMINI_2.5_PRO_PREVIEW_03_25
      # Anthropic Support:
      # - ENABLE_ANTHROPIC=true
      # - LLM_KEY=ANTHROPIC_CLAUDE3.5_SONNET
      # - ANTHROPIC_API_KEY=<span class="math-inline">\{ANTHROPIC\_API\_KEY\}
\# Microsoft Azure OpenAI support\:
\# \- ENABLE\_AZURE\=true
\# \- LLM\_KEY\=AZURE\_OPENAI                          \# Leave this value static, don't change it
\# \- AZURE\_DEPLOYMENT\=</span>{AZURE_DEPLOYMENT}      # Use the OpenAI model "Deployment Name" that you deployed
      # - AZURE_API_KEY=<span class="math-inline">\{AZURE\_API\_KEY\}            \# Copy and paste Key1 or Key2 from the OpenAI resource in Azure Portal
\# \- AZURE\_API\_BASE\=</span>{AZURE_API_BASE}          # Copy and paste the "Endpoint" from the OpenAI resource in Azure Portal
      # - AZURE_API_VERSION=${AZURE_API_VERSION}    # Specify a valid Azure OpenAI data-plane API version (eg. 2024-08-01-preview)
      # Amazon Bedrock Support:
      # - ENABLE_BEDROCK=true
      # - LLM
