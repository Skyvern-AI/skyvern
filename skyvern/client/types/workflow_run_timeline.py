# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

from ..core.pydantic_utilities import UniversalBaseModel
from .workflow_run_timeline_type import WorkflowRunTimelineType
import pydantic
import typing
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class WorkflowRunTimeline(UniversalBaseModel):
    type: WorkflowRunTimelineType = pydantic.Field()
    block: typing.Optional[typing.Any] = pydantic.Field(default=None)
    thought: typing.Optional[typing.Any] = pydantic.Field(default=None)
    children: typing.List["WorkflowRunTimeline"] = pydantic.Field(default_factory=list)
    created_at: dt.datetime = pydantic.Field()
    modified_at: dt.datetime = pydantic.Field()

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

