# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .run_engine import RunEngine
from .task_run_status import TaskRunStatus
from .output import Output
from .proxy_location import ProxyLocation
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class TaskRunResponse(UniversalBaseModel):
    run_id: str
    engine: typing.Optional[RunEngine] = None
    status: TaskRunStatus
    goal: typing.Optional[str] = None
    url: typing.Optional[str] = None
    output: typing.Optional[Output] = None
    failure_reason: typing.Optional[str] = None
    webhook_url: typing.Optional[str] = None
    totp_identifier: typing.Optional[str] = None
    totp_url: typing.Optional[str] = None
    proxy_location: typing.Optional[ProxyLocation] = None
    error_code_mapping: typing.Optional[typing.Dict[str, typing.Optional[str]]] = None
    title: typing.Optional[str] = None
    max_steps: typing.Optional[int] = None
    created_at: dt.datetime
    modified_at: dt.datetime

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
