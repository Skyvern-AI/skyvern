// This file was auto-generated by Fern from our API Definition.

import type * as Skyvern from "../index.js";

export interface WorkflowRunRequest {
    /** ID of the workflow to run. Workflow ID starts with `wpid_`. */
    workflow_id: string;
    /** Parameters to pass to the workflow */
    parameters?: Record<string, unknown>;
    /** The title for this workflow run */
    title?: string;
    /**
     * Geographic Proxy location to route the browser traffic through. This is only available in Skyvern Cloud.
     *
     * Available geotargeting options:
     * - RESIDENTIAL: the default value. Skyvern Cloud uses a random US residential proxy.
     * - RESIDENTIAL_ES: Spain
     * - RESIDENTIAL_IE: Ireland
     * - RESIDENTIAL_GB: United Kingdom
     * - RESIDENTIAL_IN: India
     * - RESIDENTIAL_JP: Japan
     * - RESIDENTIAL_FR: France
     * - RESIDENTIAL_DE: Germany
     * - RESIDENTIAL_NZ: New Zealand
     * - RESIDENTIAL_ZA: South Africa
     * - RESIDENTIAL_AR: Argentina
     * - RESIDENTIAL_AU: Australia
     * - RESIDENTIAL_ISP: ISP proxy
     * - US-CA: California
     * - US-NY: New York
     * - US-TX: Texas
     * - US-FL: Florida
     * - US-WA: Washington
     * - NONE: No proxy
     */
    proxy_location?: Skyvern.ProxyLocation;
    /** URL to send workflow status updates to after a run is finished. Refer to https://www.skyvern.com/docs/running-tasks/webhooks-faq for webhook questions. */
    webhook_url?: string;
    /**
     * URL that serves TOTP/2FA/MFA codes for Skyvern to use during the workflow run. Refer to https://www.skyvern.com/docs/credentials/totp#option-2-get-code-from-your-endpoint for more details.
     */
    totp_url?: string;
    /**
     * Identifier for the TOTP/2FA/MFA code when the code is pushed to Skyvern. Refer to https://www.skyvern.com/docs/credentials/totp#option-3-push-code-to-skyvern for more details.
     */
    totp_identifier?: string;
    /** ID of a Skyvern browser session to reuse, having it continue from the current screen state */
    browser_session_id?: string;
    /** The maximum number of scrolls for the post action screenshot. When it's None or 0, it takes the current viewpoint screenshot. */
    max_screenshot_scrolls?: number;
    /** The extra HTTP headers for the requests in browser. */
    extra_http_headers?: Record<string, string | undefined>;
    /** The CDP address for the workflow run. */
    browser_address?: string;
    /** Whether to fallback to AI if the workflow run fails. */
    ai_fallback?: boolean;
    /** Whether to run the workflow with agent or code. */
    run_with?: string;
}
