// This file was auto-generated by Fern from our API Definition.

import type * as Skyvern from "../index.js";

export interface TaskRunResponse {
    /** Unique identifier for this run. Run ID starts with `tsk_` for task runs and `wr_` for workflow runs. */
    run_id: string;
    /** Current status of the run */
    status: Skyvern.RunStatus;
    /** Output data from the run, if any. Format/schema depends on the data extracted by the run. */
    output?: TaskRunResponse.Output;
    /** List of files downloaded during the run */
    downloaded_files?: Skyvern.FileInfo[];
    /** URL to the recording of the run */
    recording_url?: string;
    /** List of last n screenshot URLs in reverse chronological order - the first one the list is the latest screenshot. */
    screenshot_urls?: string[];
    /** Reason for failure if the run failed or terminated */
    failure_reason?: string;
    /** Timestamp when this run was created */
    created_at: string;
    /** Timestamp when this run was last modified */
    modified_at: string;
    /** Timestamp when this run was queued */
    queued_at?: string;
    /** Timestamp when this run started execution */
    started_at?: string;
    /** Timestamp when this run finished */
    finished_at?: string;
    /** URL to the application UI where the run can be viewed */
    app_url?: string;
    /** ID of the Skyvern persistent browser session used for this run */
    browser_session_id?: string;
    /** The maximum number of scrolls for the post action screenshot. When it's None or 0, it takes the current viewpoint screenshot */
    max_screenshot_scrolls?: number;
    /** The script run result */
    script_run?: Skyvern.ScriptRunResponse;
    /** The errors for the run */
    errors?: Record<string, unknown>[];
    /** The original request parameters used to start this task run */
    run_request?: Skyvern.TaskRunRequest;
}

export namespace TaskRunResponse {
    /**
     * Output data from the run, if any. Format/schema depends on the data extracted by the run.
     */
    export type Output = Record<string, unknown> | unknown[] | string;
}
