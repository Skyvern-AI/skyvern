# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

from ..core.pydantic_utilities import UniversalBaseModel
from .artifact_type import ArtifactType
import pydantic
import typing
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Artifact(UniversalBaseModel):
    artifact_id: str = pydantic.Field()
    artifact_type: ArtifactType = pydantic.Field()
    uri: str = pydantic.Field()
    task_id: typing.Optional[str] = pydantic.Field(default=None)
    step_id: typing.Optional[str] = pydantic.Field(default=None)
    workflow_run_id: typing.Optional[str] = pydantic.Field(default=None)
    workflow_run_block_id: typing.Optional[str] = pydantic.Field(default=None)
    observer_cruise_id: typing.Optional[str] = pydantic.Field(default=None)
    observer_thought_id: typing.Optional[str] = pydantic.Field(default=None)
    ai_suggestion_id: typing.Optional[str] = pydantic.Field(default=None)
    signed_url: typing.Optional[str] = pydantic.Field(default=None)
    organization_id: typing.Optional[str] = pydantic.Field(default=None)
    created_at: dt.datetime = pydantic.Field()
    modified_at: dt.datetime = pydantic.Field()

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

