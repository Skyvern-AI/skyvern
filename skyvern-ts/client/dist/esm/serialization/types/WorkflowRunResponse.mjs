// This file was auto-generated by Fern from our API Definition.
import * as core from "../../core/index.mjs";
import { FileInfo } from "./FileInfo.mjs";
import { RunStatus } from "./RunStatus.mjs";
import { ScriptRunResponse } from "./ScriptRunResponse.mjs";
import { WorkflowRunRequest } from "./WorkflowRunRequest.mjs";
import { WorkflowRunResponseOutput } from "./WorkflowRunResponseOutput.mjs";
export const WorkflowRunResponse = core.serialization.object({
    runId: core.serialization.property("run_id", core.serialization.string()),
    status: RunStatus,
    output: WorkflowRunResponseOutput.optional(),
    downloadedFiles: core.serialization.property("downloaded_files", core.serialization.list(FileInfo).optional()),
    recordingUrl: core.serialization.property("recording_url", core.serialization.string().optional()),
    screenshotUrls: core.serialization.property("screenshot_urls", core.serialization.list(core.serialization.string()).optional()),
    failureReason: core.serialization.property("failure_reason", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date()),
    queuedAt: core.serialization.property("queued_at", core.serialization.date().optional()),
    startedAt: core.serialization.property("started_at", core.serialization.date().optional()),
    finishedAt: core.serialization.property("finished_at", core.serialization.date().optional()),
    appUrl: core.serialization.property("app_url", core.serialization.string().optional()),
    browserSessionId: core.serialization.property("browser_session_id", core.serialization.string().optional()),
    maxScreenshotScrolls: core.serialization.property("max_screenshot_scrolls", core.serialization.number().optional()),
    scriptRun: core.serialization.property("script_run", ScriptRunResponse.optional()),
    errors: core.serialization
        .list(core.serialization.record(core.serialization.string(), core.serialization.unknown()))
        .optional(),
    runWith: core.serialization.property("run_with", core.serialization.string().optional()),
    aiFallback: core.serialization.property("ai_fallback", core.serialization.boolean().optional()),
    runRequest: core.serialization.property("run_request", WorkflowRunRequest.optional()),
});
