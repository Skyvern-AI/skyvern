# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .for_loop_block_yaml import ForLoopBlockYaml
import typing
from .workflow_definition_yaml_parameters_item import WorkflowDefinitionYamlParametersItem
from .workflow_definition_yaml_blocks_item import WorkflowDefinitionYamlBlocksItem
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class WorkflowDefinitionYaml(UniversalBaseModel):
    parameters: typing.List[WorkflowDefinitionYamlParametersItem]
    blocks: typing.List[WorkflowDefinitionYamlBlocksItem]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
